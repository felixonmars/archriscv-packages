diff --git PKGBUILD PKGBUILD
index 7e6ee98..aea4446 100644
--- PKGBUILD
+++ PKGBUILD
@@ -12,10 +12,12 @@ makedepends=(zip autoconf2.13 python-setuptools python-psutil rust llvm clang ll
 checkdepends=(mercurial git)
 _relver=${pkgver}esr
 source=(https://archive.mozilla.org/pub/firefox/releases/$_relver/source/firefox-$_relver.source.tar.xz{,.asc}
-        0001-Fixes-for-LTO-PGO-support.patch)
+        0001-Fixes-for-LTO-PGO-support.patch
+        0001-feature-riscv64-support-from-Debian-and-clang.patch)
 sha256sums=('aa0e28a4150c33a165120a24f20e0373e74635c9f812732a08850d71cda3b2fa'
             'SKIP'
-            '926a573eabe3b6177363b795ed5e5641b4a4ebc6d7cfa093f11e1779ac0f897c')
+            '926a573eabe3b6177363b795ed5e5641b4a4ebc6d7cfa093f11e1779ac0f897c'
+            '066acce0f7a28ee51c6a53fb3bbe00e86c1c2d969b40a9ce36588ec0b4525250')
 validpgpkeys=('14F26682D0916CDD81E37B6D61B7B526D98F0353') # Mozilla Software Releases <release@mozilla.com>
 
 # Make sure the duplication between bin and lib is found
@@ -27,6 +29,7 @@ prepare() {
 
   # Post-78 fixes to fix LTO with LLVM 11
   patch -Np1 -i ../0001-Fixes-for-LTO-PGO-support.patch
+  patch -Np1 -i ../0001-feature-riscv64-support-from-Debian-and-clang.patch
 }
 
 build() {
@@ -37,7 +40,7 @@ build() {
     --disable-jemalloc
     --disable-strip
     --enable-hardening
-    --enable-linker=lld
+    --enable-linker=bfd
     --enable-optimize
     --enable-readline
     --enable-release
@@ -47,6 +50,7 @@ build() {
     --with-intl-api
     --with-system-zlib
     --without-system-icu
+    --disable-jit
   )
 
   export CC=clang
@@ -57,41 +61,40 @@ build() {
 
   cd firefox-$pkgver/obj
 
-  # Do 3-tier PGO
-  echo "Building instrumented JS..."
-  sh ../js/src/configure "${configure_args[@]}" \
-    --enable-profile-generate=cross
+  ## Do 3-tier PGO
+  #echo "Building instrumented JS..."
+  sh ../js/src/configure "${configure_args[@]}"
   make
 
-  echo "Profiling instrumented JS..."
-  (
-    local js="$PWD/dist/bin/js"
-    export LLVM_PROFILE_FILE="$PWD/js-%p-%m.profraw"
+  #echo "Profiling instrumented JS..."
+  #(
+  #  local js="$PWD/dist/bin/js"
+  #  export LLVM_PROFILE_FILE="$PWD/js-%p-%m.profraw"
 
-    cd ../js/src/octane
-    "$js" run.js
+  #  cd ../js/src/octane
+  #  "$js" run.js
 
-    cd ../../../third_party/webkit/PerformanceTests/ARES-6
-    "$js" cli.js
+  #  cd ../../../third_party/webkit/PerformanceTests/ARES-6
+  #  "$js" cli.js
 
-    cd ../SunSpider/sunspider-0.9.1
-    "$js" sunspider-standalone-driver.js
-  )
+  #  cd ../SunSpider/sunspider-0.9.1
+  #  "$js" sunspider-standalone-driver.js
+  #)
 
-  llvm-profdata merge -o merged.profdata *.profraw
+  #llvm-profdata merge -o merged.profdata *.profraw
 
-  stat -c "Profile data found (%s bytes)" merged.profdata
-  test -s merged.profdata
+  #stat -c "Profile data found (%s bytes)" merged.profdata
+  #test -s merged.profdata
 
-  echo "Removing instrumented JS..."
-  make clobber
+  #echo "Removing instrumented JS..."
+  #make clobber
 
-  echo "Building optimized JS..."
-  sh ../js/src/configure "${configure_args[@]}" \
-    --enable-lto=cross \
-    --enable-profile-use=cross \
-    --with-pgo-profile-path="$PWD/merged.profdata"
-  make
+  #echo "Building optimized JS..."
+  #sh ../js/src/configure "${configure_args[@]}" \
+  #  --enable-lto=cross \
+  #  --enable-profile-use=cross \
+  #  --with-pgo-profile-path="$PWD/merged.profdata"
+  #make
 }
 
 check() {
