--- PKGBUILD
+++ PKGBUILD
@@ -7,10 +7,11 @@
 pkgbase=rust
 pkgname=(
   rust
-  lib32-rust-libs
   rust-musl
   rust-aarch64-gnu
   rust-aarch64-musl
+  rust-x86_64-gnu
+  rust-x86_64-musl
   rust-wasm
   rust-src
 )
@@ -39,15 +40,16 @@ depends=(
 makedepends=(
   aarch64-linux-gnu-gcc
   aarch64-linux-gnu-glibc
+  x86_64-linux-gnu-gcc
+  x86_64-linux-gnu-glibc
   clang
   cmake
-  lib32-gcc-libs
-  lib32-glibc
   libffi
   lld
   llvm
   musl
   musl-aarch64
+  musl-x86_64
   ninja
   perl
   python
@@ -105,6 +107,12 @@ prepare() {
   # Use our aarch64-linux-gnu-gcc
   patch -Np1 -i ../0006-compiler-Use-aarch64-linux-gnu-gcc-to-link-aarch64-t.patch
 
+  # Force `crt_static_default = true` after upstream switched to dynamic by
+  # default, which leads to https://github.com/rust-lang/rust/issues/82521.
+  # x86_64 and others' behaviours remains the same, we align with them.
+  # See https://github.com/rust-lang/rust/commit/9c37c14aa2456315bf7b3fa7b3e089bc13a43ee9
+  patch -Np1 -i ../riscv-musl-crt-default-static.diff
+
   cat >bootstrap.toml <<END
 # see src/bootstrap/defaults/
 profile = "dist"
@@ -119,8 +127,9 @@ link-shared = true
 [build]
 description = "Arch Linux $pkgbase $epoch:$pkgver-$pkgrel"
 target = [
+  "riscv64gc-unknown-linux-gnu",
+  "riscv64gc-unknown-linux-musl",
   "x86_64-unknown-linux-gnu",
-  "i686-unknown-linux-gnu",
   "x86_64-unknown-linux-musl",
   "aarch64-unknown-linux-gnu",
   "aarch64-unknown-linux-musl",
@@ -172,22 +181,16 @@ jemalloc = true
 compression-formats = ["gz"]
 compression-profile = "fast"
 
-[target.x86_64-unknown-linux-gnu]
+[target.riscv64gc-unknown-linux-gnu]
 cc = "/usr/bin/gcc"
 cxx = "/usr/bin/g++"
 ar = "/usr/bin/gcc-ar"
 ranlib = "/usr/bin/gcc-ranlib"
 llvm-config = "/usr/bin/llvm-config"
 
-[target.i686-unknown-linux-gnu]
-cc = "/usr/bin/gcc"
-cxx = "/usr/bin/g++"
-ar = "/usr/bin/gcc-ar"
-ranlib = "/usr/bin/gcc-ranlib"
-
-[target.x86_64-unknown-linux-musl]
+[target.riscv64gc-unknown-linux-musl]
 cc = "/usr/bin/musl-gcc"
-cxx = "/usr/bin/g++"
+cxx = "/usr/bin/musl-gcc"
 ar = "/usr/bin/gcc-ar"
 ranlib = "/usr/bin/gcc-ranlib"
 sanitizers = false
@@ -211,6 +214,24 @@ default-linker = "aarch64-linux-gnu-gcc"
 sanitizers = false
 musl-root = "/usr/aarch64-linux-musl/lib/musl"
 
+[target.x86_64-unknown-linux-gnu]
+cc = "/usr/bin/x86_64-linux-gnu-gcc"
+cxx = "/usr/bin/x86_64-linux-gnu-g++"
+ar = "/usr/bin/x86_64-linux-gnu-gcc-ar"
+ranlib = "/usr/bin/x86_64-linux-gnu-gcc-ranlib"
+linker = "/usr/bin/x86_64-linux-gnu-gcc"
+default-linker = "x86_64-linux-gnu-gcc"
+
+[target.x86_64-unknown-linux-musl]
+cc = "/usr/x86_64-linux-musl/bin/musl-gcc"
+cxx = "/usr/bin/x86_64-linux-gnu-g++"
+ar = "/usr/bin/x86_64-linux-gnu-gcc-ar"
+ranlib = "/usr/bin/x86_64-linux-gnu-gcc-ranlib"
+linker = "/usr/bin/x86_64-linux-gnu-gcc"
+default-linker = "x86_64-linux-gnu-gcc"
+sanitizers = false
+musl-root = "/usr/x86_64-linux-musl/lib/musl"
+
 [target.wasm32-unknown-unknown]
 cc = "/usr/bin/clang"
 cxx = "/usr/bin/clang++"
@@ -304,12 +325,11 @@ build() {
 
   # rustbuild always installs copies of the shared libraries to /usr/lib,
   # overwrite them with symlinks to the per-architecture versions
-  mkdir -pv usr/lib32
-  ln -srvft usr/lib   usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so
-  ln -srvft usr/lib32 usr/lib/rustlib/i686-unknown-linux-gnu/lib/*.so
+  ln -srvft usr/lib   usr/lib/rustlib/riscv64gc-unknown-linux-gnu/lib/*.so
 
-  _pick dest-i686 usr/lib/rustlib/i686-unknown-linux-gnu usr/lib32
-  _pick dest-musl usr/lib/rustlib/x86_64-unknown-linux-musl
+  _pick dest-musl usr/lib/rustlib/riscv64gc-unknown-linux-musl
+  _pick dest-x86_64-gnu usr/lib/rustlib/x86_64-unknown-linux-gnu
+  _pick dest-x86_64-musl usr/lib/rustlib/x86_64-unknown-linux-musl
   _pick dest-aarch64-gnu usr/lib/rustlib/aarch64-unknown-linux-gnu
   _pick dest-aarch64-musl usr/lib/rustlib/aarch64-unknown-linux-musl
   _pick dest-wasm usr/lib/rustlib/wasm32{,v1}-*
@@ -394,6 +414,33 @@ package_rust-aarch64-musl() {
     rustc-$pkgver-src/{COPYRIGHT,LICENSE-MIT}
 }
 
+package_rust-x86_64-gnu() {
+  pkgdesc="x86_64 GNU target for Rust"
+  depends=(
+    x86_64-linux-gnu-gcc
+    x86_64-linux-gnu-glibc
+    rust
+  )
+
+  cp -a dest-x86_64-gnu/* "$pkgdir"
+
+  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 \
+    rustc-$pkgver-src/{COPYRIGHT,LICENSE-MIT}
+}
+
+package_rust-x86_64-musl() {
+  pkgdesc="x86_64 Musl target for Rust"
+  depends=(
+    x86_64-linux-gnu-gcc
+    rust
+  )
+
+  cp -a dest-x86_64-musl/* "$pkgdir"
+
+  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 \
+    rustc-$pkgver-src/{COPYRIGHT,LICENSE-MIT}
+}
+
 package_rust-wasm() {
   pkgdesc="WebAssembly targets for Rust"
   depends=(
@@ -418,4 +465,7 @@ package_rust-src() {
     rustc-$pkgver-src/{COPYRIGHT,LICENSE-MIT}
 }
 
+source+=(riscv-musl-crt-default-static.diff)
+b2sums+=('c7e4849c433bba9fd69f05e6b242e94fcd229e9470e086bd93e6782ff811b418fd46596fe503b507c3cd677089f7e54fabffa5f88a98e965742e06e381619e49')
+
 # vim:set ts=2 sw=2 et:
