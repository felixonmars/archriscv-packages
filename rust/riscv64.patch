--- PKGBUILD
+++ PKGBUILD
@@ -5,7 +5,7 @@
 # Contributor: userwithuid <userwithuid@gmail.com>
 
 pkgbase=rust
-pkgname=(rust lib32-rust-libs rust-musl rust-wasm rust-src)
+pkgname=(rust rust-musl rust-wasm rust-src)
 epoch=1
 pkgver=1.61.0
 pkgrel=1
@@ -16,8 +16,8 @@ license=(MIT Apache)
 options=(!emptydirs !strip !lto)
 _llvm_ver=13.0.1
 depends=(gcc-libs llvm-libs curl libssh2 gcc)
-makedepends=(rust "llvm=$_llvm_ver" libffi lib32-gcc-libs perl python cmake musl
-             ninja wasi-libc lld)
+makedepends=(rust "llvm=$_llvm_ver" libffi perl python cmake musl
+             ninja wasi-libc lld git)
 checkdepends=(procps-ng gdb)
 source=(
   "https://static.rust-lang.org/dist/rustc-$pkgver-src.tar.gz"{,.asc}
@@ -26,6 +26,9 @@ source=(
   0001-bootstrap-Change-libexec-dir.patch
   0002-compiler-Change-LLVM-targets.patch
   0003-compiler-Use-wasm-ld-for-wasm-targets.patch
+  git+https://github.com/rust-lang/libc.git#tag=0.2.116
+  replace_patched_libc_cc.patch
+  libc_add_missing_syscalls.patch::https://github.com/rust-lang/libc/pull/2664.patch
 )
 sha256sums=('ad0b4351675aa9abdf4c7e066613bd274c4391c5506db152983426376101daed'
             'SKIP'
@@ -34,7 +37,10 @@ sha256sums=('ad0b4351675aa9abdf4c7e066613bd274c4391c5506db152983426376101daed'
             'c901a9bb036c29ca092f7dbc8b447efdd9aa1044a902a88f9d024cb22681dc19'
             '60c6dfc100d292284af2187cfefc1d0d928139ca557d27bc6bef88edefccff70'
             '8dcb566da29a92ecf3eb6afe094d9c7766d08230d90fd666bfd022c018ae676a'
-            '26bf232d144b81a303ed91f6a331ddf004c5d9fefd41a11e36b61812a34459aa')
+            '26bf232d144b81a303ed91f6a331ddf004c5d9fefd41a11e36b61812a34459aa'
+            'SKIP'
+            'ce04009c497f6f5499f6870196266e953ca3c33af4d404abf420e4f46514be57'
+            '46efe435c3bf2f78a2434043e1eeb63620c5b50600eaef56a8e04f253f90dd8f')
 validpgpkeys=(108F66205EAEB0AAA8DD5E1C85AB96E6FA1BE5FE  # Rust Language (Tag and Release Signing Key) <rust-key@rust-lang.org>
               474E22316ABF4785A88C6E8EA2C794A986419D8A  # Tom Stellard <tstellar@redhat.com>
               B6C8F98282B944E3B0D5C2530FC3042E345AD05D) # Hans Wennborg <hans@chromium.org>
@@ -53,6 +59,8 @@ prepare() {
   # Use our wasm-ld
   patch -Np1 -i ../0003-compiler-Use-wasm-ld-for-wasm-targets.patch
 
+  patch -Np1 -i "../replace_patched_libc_cc.patch"
+
   cat >config.toml <<END
 changelog-seen = 2
 profile = "user"
@@ -62,9 +70,8 @@ link-shared = true
 
 [build]
 target = [
-  "x86_64-unknown-linux-gnu",
-  "i686-unknown-linux-gnu",
-  "x86_64-unknown-linux-musl",
+  "riscv64gc-unknown-linux-gnu",
+  "riscv64gc-unknown-linux-musl",
   "wasm32-unknown-unknown",
   "wasm32-wasi",
 ]
@@ -90,7 +97,6 @@ description = "Arch Linux $pkgbase $epoch:$pkgver-$pkgrel"
 rpath = false
 backtrace-on-ice = true
 remap-debuginfo = true
-jemalloc = true
 
 # LLVM crashes when passing an object through ThinLTO twice.  This is triggered
 # when using rust code in cross-language LTO if libstd was built using ThinLTO.
@@ -104,12 +110,14 @@ deny-warnings = false
 [dist]
 compression-formats = ["gz"]
 
-[target.x86_64-unknown-linux-gnu]
+[target.riscv64gc-unknown-linux-gnu]
 llvm-config = "/usr/bin/llvm-config"
 
-[target.x86_64-unknown-linux-musl]
+[target.riscv64gc-unknown-linux-musl]
 sanitizers = false
 musl-root = "/usr/lib/musl"
+cc = "/usr/bin/musl-gcc"
+cxx = "/usr/bin/musl-gcc"
 
 [target.wasm32-unknown-unknown]
 sanitizers = false
@@ -120,6 +128,10 @@ sanitizers = false
 profiler = false
 wasi-root = "/usr/share/wasi-sysroot"
 END
+
+  cargo update -p bootstrap -p std
+  cd ${srcdir}/libc
+  patch -Np1 -i "../libc_add_missing_syscalls.patch"
 }
 
 _pick() {
@@ -149,9 +161,7 @@ build() {
 
   # rustbuild always installs copies of the shared libraries to /usr/lib,
   # overwrite them with symlinks to the per-architecture versions
-  mkdir -p usr/lib32
-  ln -srft usr/lib   usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so
-  ln -srft usr/lib32 usr/lib/rustlib/i686-unknown-linux-gnu/lib/*.so
+  ln -srft usr/lib   usr/lib/rustlib/riscv64gc-unknown-linux-gnu/lib/*.so
 
   mkdir -p usr/share/bash-completion
   mv etc/bash_completion.d usr/share/bash-completion/completions
@@ -159,8 +169,7 @@ build() {
   mkdir -p usr/share/licenses/rust
   mv -t usr/share/licenses/rust usr/share/doc/rust/{COPYRIGHT,LICENSE*}
 
-  _pick dest-i686 usr/lib/rustlib/i686-unknown-linux-gnu usr/lib32
-  _pick dest-musl usr/lib/rustlib/x86_64-unknown-linux-musl
+  _pick dest-musl usr/lib/rustlib/riscv64gc-unknown-linux-musl
   _pick dest-wasm usr/lib/rustlib/wasm32-*
   _pick dest-src  usr/lib/rustlib/src
 }
@@ -175,19 +184,6 @@ package_rust() {
   cp -a dest-rust/* "$pkgdir"
 }
 
-package_lib32-rust-libs() {
-  pkgdesc="32-bit target and libraries for Rust"
-  depends=(rust lib32-gcc-libs)
-  provides=(lib32-rust)
-  conflicts=(lib32-rust)
-  replaces=(lib32-rust)
-
-  cp -a dest-i686/* "$pkgdir"
-
-  mkdir -p "$pkgdir/usr/share/licenses"
-  ln -s rust "$pkgdir/usr/share/licenses/$pkgname"
-}
-
 package_rust-musl() {
   pkgdesc="Musl target for Rust"
   depends=(rust)
