--- PKGBUILD
+++ PKGBUILD
@@ -3,7 +3,7 @@
 # Contributor: Tobias Powalowski <tpowa@archlinux.org>
 
 pkgbase=opencv
-pkgname=(opencv opencv-samples python-opencv opencv-cuda)
+pkgname=(opencv opencv-samples python-opencv)
 pkgver=4.7.0
 pkgrel=6
 pkgdesc='Open Source Computer Vision Library'
@@ -12,7 +12,7 @@ license=(BSD)
 url='https://opencv.org/'
 depends=(tbb openexr gst-plugins-base libdc1394 cblas lapack libgphoto2 openjpeg2 ffmpeg protobuf)
 makedepends=(cmake python-numpy python-setuptools mesa eigen hdf5 lapacke qt5-base vtk glew ant java-environment
-             pugixml openmpi cudnn fmt nlohmann-json)
+             pugixml openmpi fmt nlohmann-json)
 optdepends=('opencv-samples: samples'
             'vtk: for the viz module'
             'glew: for the viz module'
@@ -26,6 +26,8 @@ source=(https://github.com/opencv/opencv/archive/$pkgver/$pkgname-$pkgver.tar.gz
 sha256sums=('8df0079cdbe179748a18d44731af62a245a45ebf5085223dc03133954c662973'
             '42df840cf9055e59d0e22c249cfb19f04743e1bdad113d31b1573d3934d62584'
             'f35a2d4ea0d6212c7798659e59eda2cb0b5bc858360f7ce9c696c77d3029668e')
+# fix error 'relocation truncated to fit: R_RISCV_PCREL_HI20 against `.LC19''
+options=(!lto)
 
 prepare() {
   patch -d $pkgname-$pkgver -p1 < vtk9.patch # Don't require all vtk optdepends
@@ -48,7 +50,6 @@ build() {
          -DINSTALL_PYTHON_EXAMPLES=ON \
          -DCMAKE_INSTALL_PREFIX=/usr \
          -DCPU_BASELINE_DISABLE=SSE3 \
-         -DCPU_BASELINE_REQUIRE=SSE2 \
          -DOPENCV_EXTRA_MODULES_PATH=$srcdir/opencv_contrib-$pkgver/modules \
          -DOPENCV_SKIP_PYTHON_LOADER=ON \
          -DLAPACK_LIBRARIES=/usr/lib/liblapack.so;/usr/lib/libblas.so;/usr/lib/libcblas.so \
@@ -63,15 +64,6 @@ build() {
   cmake -B build -S $pkgname-$pkgver $_opts \
     -DBUILD_WITH_DEBUG_INFO=ON
   cmake --build build
-
-  CFLAGS="${CFLAGS} -fno-lto" CXXFLAGS="${CXXFLAGS} -fno-lto" LDFLAGS="${LDFLAGS} -fno-lto" \
-  cmake -B build-cuda -S $pkgname-$pkgver $_opts \
-    -DBUILD_WITH_DEBUG_INFO=OFF \
-    -DWITH_CUDA=ON \
-    -DWITH_CUDNN=ON \
-    -DCUDA_ARCH_BIN='52-real;53-real;60-real;61-real;62-real;70-real;72-real;75-real;80-real;86-real;87-real;89-real;90-real;90-virtual' \
-    -DCUDA_ARCH_PTX='90-virtual'
-  cmake --build build-cuda
 }
 
 package_opencv() {
@@ -114,25 +106,3 @@ package_python-opencv() {
   install -Dm644 $pkgbase-$pkgver/LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname
 }
 
-package_opencv-cuda() {
-  pkgdesc+=' (with CUDA support)'
-  depends+=(cudnn)
-  conflicts=(opencv)
-  provides=(opencv=$pkgver)
-  options=(!debug)
-
-  DESTDIR="$pkgdir" cmake --install build-cuda
-
-  # install license file
-  install -Dm644 $pkgbase-$pkgver/LICENSE -t "$pkgdir"/usr/share/licenses/$pkgname
-
-  # Split samples
-  rm -r "$pkgdir"/usr/share/opencv4/samples
-
-  # Add java symlinks expected by some binary blobs
-  ln -sr "$pkgdir"/usr/share/java/{opencv4/opencv-${pkgver//./},opencv}.jar
-  ln -sr "$pkgdir"/usr/lib/{libopencv_java${pkgver//./},libopencv_java}.so
-
-  # Split Python bindings
-  rm -r "$pkgdir"/usr/lib/python3*
-}
