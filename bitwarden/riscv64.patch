--- PKGBUILD
+++ PKGBUILD
@@ -10,19 +10,25 @@ arch=('x86_64')
 url='https://github.com/bitwarden/clients/tree/master/apps/desktop'
 license=('GPL3')
 depends=("electron$_electronversion" 'libnotify' 'libsecret' 'libxtst' 'libxss' 'libnss_nis')
-makedepends=('git' 'npm' 'python' 'node-gyp' 'nodejs-lts-hydrogen' 'jq' 'rust')
+makedepends=('git' 'npm' 'python' 'node-gyp' 'nodejs-lts-hydrogen' 'jq' 'rust' 'go' 'p7zip')
 source=(bitwarden::git+https://github.com/bitwarden/clients.git#tag=desktop-v$pkgver
         messaging.main.ts.patch
         nativelib.patch
         ${pkgname}.sh
-        ${pkgname}.desktop)
+        ${pkgname}.desktop
+	bitwarden-napi-riscv64.patch
+	git+https://github.com/develar/app-builder.git#commit=c92c3a2899b5887662321878a0a8681d122742bb
+)
 sha512sums=('SKIP'
             'babcae0dba4d036e5d2cd04d8932b63253bc7b27b14d090932066e9d39383f7565c06d72dae9f96e741b494ef7e50a1fe7ec33905aa3124b427a8bf404df5762'
             '88610cba9dea99aefdfea51139f5770f04f1e877d75e86f2eea3470c99880282c5ff91060cb08d92cdf00d0a1b3bd40c5f3ee887cee11946dd31ca06da978272'
             '98d2860bef2283fd09710fbbc5362d7ef2cd8eca26f35805ea258f2dacba78bd6aab14c834388a5089a8150eb0f32a82577aab10f8ad68e1a6371959b2802ad4'
-            'fdc047aadc1cb947209d7ae999d8a7f5f10ae46bf71687080bc13bc3082cc5166bbbe88c8f506b78adb5d772f5366ec671b04a2f761e7d7f249ebe5726681e30')
+            'fdc047aadc1cb947209d7ae999d8a7f5f10ae46bf71687080bc13bc3082cc5166bbbe88c8f506b78adb5d772f5366ec671b04a2f761e7d7f249ebe5726681e30'
+            '4087cd10bbaad8c44917eba6a74ea26ad9d38a3c5f6ad920cb6804e4526e5e66f75c71eab60ba48997daf2f1e199b2a170c070d900cba599e4947eb48474da0c'
+            '404f0e85748365fa97fdf79c400fbd2af1ff4d8f35cc172abc5055ae7c34aeb11aa2a3766b75d38041cafa92e58c3e1b4a26cd07a5492136c362332d102b2aa3')
 
 prepare() {
+	patch -Np1 -d bitwarden < bitwarden-napi-riscv64.patch
 	cd bitwarden/apps/desktop
 
 	export npm_config_build_from_source=true
@@ -33,7 +39,7 @@ prepare() {
 	patch --strip=1 src/main/messaging.main.ts "$srcdir/messaging.main.ts.patch"
 
 	# Patch build to make it work with system electron
-	export SYSTEM_ELECTRON_VERSION=$(electron$_electronversion -v | sed 's/v//g')
+	export SYSTEM_ELECTRON_VERSION=$(< "/usr/lib/electron$_electronversion/version")
 	export ELECTRONVERSION=$_electronversion
 	sed -i "s|@electronversion@|${ELECTRONVERSION}|" "$srcdir/bitwarden.sh"
 	# jq < package.json \
@@ -42,30 +48,42 @@ prepare() {
 	# mv package.json.patched package.json
 	cd ../../
 	patch --strip=1 apps/desktop/desktop_native/index.js "$srcdir/nativelib.patch"
-	npm ci
+
+	jq '.devDependencies."electron-builder"="npm:@riscv-forks/electron-builder@24.13.3"
+	 |  .overrides."app-builder-lib"="npm:@riscv-forks/app-builder-lib@24.13.3"
+	 |  .overrides."builder-util"="npm:@riscv-forks/builder-util@24.13.1"' package.json > package.json.new
+	mv package.json{.new,}
+	npm i
+	local _builder_bin=node_modules/app-builder-bin/linux/riscv64
+	mkdir "$_builder_bin"
+	go build -C ../app-builder
+	cp ../app-builder/app-builder "$_builder_bin"
+	mkdir -p  node_modules/7zip-bin/linux/riscv64
+	ln -s /usr/bin/7za node_modules/7zip-bin/linux/riscv64/7za
 }
 
 build() {
 	cd bitwarden/apps/desktop
 	electronDist=/usr/lib/electron$_electronversion
-	electronVer=$(electron$_electronversion --version | tail -c +2)
+	electronVer=$(< "$electronDist/version")
 	export npm_config_build_from_source=true
 	export npm_config_cache="$srcdir/npm_cache"
 	export ELECTRON_SKIP_BINARY_DOWNLOAD=1
 	pushd desktop_native/
-	npm run build
+	cargo build --release --locked
+	mv target/release/libdesktop_native.so desktop_native.linux-riscv64-gnu.node
 	popd
 	npm run build
 	npm run clean:dist 
-	npm exec -c "electron-builder --linux --x64 --dir -c.electronDist=$electronDist \
+	npm exec -c "electron-builder --linux --riscv64 --dir -c.electronDist=$electronDist \
 	             -c.electronVersion=$electronVer"
 }
 
 package(){
 	cd bitwarden/apps/desktop
-	install -vDm644 dist/linux-unpacked/resources/app.asar -t "${pkgdir}/usr/lib/${pkgname}"
+	install -vDm644 dist/linux-riscv64-unpacked/resources/app.asar -t "${pkgdir}/usr/lib/${pkgname}"
 	install -vDm644 build/package.json -t "${pkgdir}/usr/lib/${pkgname}"
-	cp -vr dist/linux-unpacked/resources/app.asar.unpacked -t "${pkgdir}/usr/lib/${pkgname}"
+	cp -vr dist/linux-riscv64-unpacked/resources/app.asar.unpacked -t "${pkgdir}/usr/lib/${pkgname}"
 
 	for i in 16 32 64 128 256 512 1024; do
 		install -vDm644 resources/icons/${i}x${i}.png "${pkgdir}/usr/share/icons/hicolor/${i}x${i}/apps/${pkgname}.png"
