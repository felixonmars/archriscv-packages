diff --git a/node_modules/builder-util/out/arch.js b/node_modules/builder-util/out/arch.js
index a8827f5..2f5a626 100644
--- a/node_modules/builder-util/out/arch.js
+++ b/node_modules/builder-util/out/arch.js
@@ -8,6 +8,7 @@ var Arch;
     Arch[Arch["armv7l"] = 2] = "armv7l";
     Arch[Arch["arm64"] = 3] = "arm64";
     Arch[Arch["universal"] = 4] = "universal";
+    Arch[Arch["riscv64"] = 5] = "riscv64";
 })(Arch = exports.Arch || (exports.Arch = {}));
 function toLinuxArchString(arch, targetName) {
     switch (arch) {
@@ -19,13 +20,15 @@ function toLinuxArchString(arch, targetName) {
             return targetName === "snap" || targetName === "deb" ? "armhf" : targetName === "flatpak" ? "arm" : "armv7l";
         case Arch.arm64:
             return targetName === "pacman" || targetName === "flatpak" ? "aarch64" : "arm64";
+        case Arch.riscv64:
+            return "riscv64";
         default:
             throw new Error(`Unsupported arch ${arch}`);
     }
 }
 exports.toLinuxArchString = toLinuxArchString;
 function getArchCliNames() {
-    return [Arch[Arch.ia32], Arch[Arch.x64], Arch[Arch.armv7l], Arch[Arch.arm64]];
+    return [Arch[Arch.ia32], Arch[Arch.x64], Arch[Arch.armv7l], Arch[Arch.arm64], Arch[Arch.riscv64]];
 }
 exports.getArchCliNames = getArchCliNames;
 function getArchSuffix(arch, defaultArch) {
@@ -45,6 +48,8 @@ function archFromString(name) {
             return Arch.armv7l;
         case "universal":
             return Arch.universal;
+        case "riscv64":
+            return Arch.riscv64;
         default:
             throw new Error(`Unsupported arch ${name}`);
     }
