From 9ea3fd6dbf106a45deedf8f499cff6e6f4e775ae Mon Sep 17 00:00:00 2001
From: cubercsl <2014cais01@gmail.com>
Date: Thu, 6 Jan 2022 20:21:36 +0800
Subject: [PATCH] Fix gcc 7.3 compiler warnings

---
 aard.cc               |  6 +++---
 aard.hh               |  2 +-
 belarusiantranslit.cc |  2 +-
 belarusiantranslit.hh |  2 +-
 bgl.cc                | 14 +++++++-------
 bgl.hh                |  2 +-
 btreeidx.cc           |  4 ++--
 btreeidx.hh           |  5 +++--
 chinese.cc            |  2 +-
 chinese.hh            |  2 +-
 config.cc             | 18 ++++++++---------
 config.hh             | 19 +++++++++---------
 cpp_features.hh       | 10 ++++++++++
 delegate.cc           |  4 ++++
 dictdfiles.cc         |  6 +++---
 dictdfiles.hh         |  2 +-
 dictionary.cc         | 14 +++++++-------
 dictionary.hh         | 19 +++++++++---------
 dictserver.cc         | 10 +++++-----
 dictserver.hh         |  2 +-
 dsl.cc                | 12 ++++++------
 dsl.hh                |  2 +-
 dsl_details.cc        | 12 ++++++------
 dsl_details.hh        | 12 ++++++------
 epwing.cc             | 18 ++++++++---------
 epwing.hh             |  2 +-
 externalviewer.cc     |  4 ++--
 externalviewer.hh     |  5 +++--
 file.cc               | 38 ++++++++++++++++++------------------
 file.hh               | 45 ++++++++++++++++++++++---------------------
 forvo.cc              |  8 ++++----
 forvo.hh              |  2 +-
 gddebug.hh            |  4 ++--
 german.cc             |  2 +-
 german.hh             |  2 +-
 goldendict.pro        |  4 +++-
 greektranslit.cc      |  2 +-
 greektranslit.hh      |  2 +-
 hunspell.cc           | 14 +++++++-------
 hunspell.hh           |  2 +-
 iconv.cc              | 10 +++++-----
 iconv.hh              | 11 ++++++-----
 lsa.cc                | 10 +++++-----
 lsa.hh                |  2 +-
 mdx.cc                | 10 +++++-----
 mdx.hh                |  2 +-
 mediawiki.cc          | 10 +++++-----
 mediawiki.hh          |  2 +-
 programs.cc           | 10 +++++-----
 programs.hh           |  2 +-
 romaji.cc             |  2 +-
 romaji.hh             |  2 +-
 russiantranslit.cc    |  2 +-
 russiantranslit.hh    |  2 +-
 sdict.cc              |  6 +++---
 sdict.hh              |  2 +-
 slob.cc               | 10 +++++-----
 slob.hh               |  2 +-
 sounddir.cc           | 10 +++++-----
 sounddir.hh           |  2 +-
 stardict.cc           | 14 +++++++-------
 stardict.hh           |  2 +-
 transliteration.cc    |  6 +++---
 transliteration.hh    |  6 +++---
 utf8.cc               |  2 +-
 utf8.hh               |  3 ++-
 voiceengines.cc       | 10 +++++-----
 voiceengines.hh       |  2 +-
 website.cc            | 10 +++++-----
 website.hh            |  2 +-
 xdxf.cc               | 14 +++++++-------
 xdxf.hh               |  2 +-
 zim.cc                | 10 +++++-----
 zim.hh                |  2 +-
 zipsounds.cc          | 10 +++++-----
 zipsounds.hh          |  2 +-
 76 files changed, 283 insertions(+), 260 deletions(-)
 create mode 100644 cpp_features.hh

diff --git a/aard.cc b/aard.cc
index 8b7841e..bc6fe7d 100644
--- a/aard.cc
+++ b/aard.cc
@@ -260,7 +260,7 @@ class AardDictionary: public BtreeIndexing::BtreeDictionary
     virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                         vector< wstring > const & alts,
                                                         wstring const & )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual QString const& getDescription();
 
@@ -811,7 +811,7 @@ void AardArticleRequest::run()
 sptr< Dictionary::DataRequest > AardDictionary::getArticle( wstring const & word,
                                                             vector< wstring > const & alts,
                                                             wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new AardArticleRequest( word, alts, *this );
 }
@@ -822,7 +822,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/aard.hh b/aard.hh
index c9aabbc..bd8723a 100644
--- a/aard.hh
+++ b/aard.hh
@@ -16,7 +16,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/belarusiantranslit.cc b/belarusiantranslit.cc
index be18245..7811ed8 100644
--- a/belarusiantranslit.cc
+++ b/belarusiantranslit.cc
@@ -406,7 +406,7 @@ public:
   }
 };
 
-std::vector< sptr< Dictionary::Class > > makeDictionaries() throw( std::exception )
+std::vector< sptr< Dictionary::Class > > makeDictionaries() THROW_SPEC( std::exception )
 {
   static BelarusianLatinToClassicTable t0;
   static BelarusianLatinToSchoolTable t1;
diff --git a/belarusiantranslit.hh b/belarusiantranslit.hh
index 47e3dff..5c62207 100644
--- a/belarusiantranslit.hh
+++ b/belarusiantranslit.hh
@@ -10,7 +10,7 @@
 // Support for Belarusian transliteration
 namespace BelarusianTranslit {
 
-std::vector< sptr< Dictionary::Class > > makeDictionaries() throw( std::exception );
+std::vector< sptr< Dictionary::Class > > makeDictionaries() THROW_SPEC( std::exception );
 
 }
 
diff --git a/bgl.cc b/bgl.cc
index cbd2caf..c1493da 100644
--- a/bgl.cc
+++ b/bgl.cc
@@ -224,15 +224,15 @@ namespace
     { return idxHeader.langTo; }
 
     virtual sptr< Dictionary::WordSearchRequest > findHeadwordsForSynonym( wstring const & )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                         vector< wstring > const & alts,
                                                         wstring const & )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual sptr< Dictionary::DataRequest > getSearchResults( QString const & searchString,
                                                               int searchMode, bool matchCase,
@@ -594,7 +594,7 @@ void BglHeadwordsRequest::run()
 
 sptr< Dictionary::WordSearchRequest >
   BglDictionary::findHeadwordsForSynonym( wstring const & word )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new BglHeadwordsRequest( word, *this );
 }
@@ -905,7 +905,7 @@ void BglArticleRequest::run()
 sptr< Dictionary::DataRequest > BglDictionary::getArticle( wstring const & word,
                                                            vector< wstring > const & alts,
                                                            wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new BglArticleRequest( word, alts, *this );
 }
@@ -1049,7 +1049,7 @@ void BglResourceRequest::run()
 }
 
 sptr< Dictionary::DataRequest > BglDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new BglResourceRequest( idxMutex, idx, idxHeader.resourceListOffset,
                                  idxHeader.resourcesCount, name );
@@ -1142,7 +1142,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/bgl.hh b/bgl.hh
index 67548b6..05ea64d 100644
--- a/bgl.hh
+++ b/bgl.hh
@@ -23,7 +23,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                     vector< string > const & fileNames,
                                     string const & indicesDir,
                                     Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/btreeidx.cc b/btreeidx.cc
index 256e396..71c2987 100644
--- a/btreeidx.cc
+++ b/btreeidx.cc
@@ -455,7 +455,7 @@ BtreeWordSearchRequest::~BtreeWordSearchRequest()
 
 sptr< Dictionary::WordSearchRequest > BtreeDictionary::prefixMatch(
   wstring const & str, unsigned long maxResults )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new BtreeWordSearchRequest( *this, str, 0, -1, true, maxResults );
 }
@@ -463,7 +463,7 @@ sptr< Dictionary::WordSearchRequest > BtreeDictionary::prefixMatch(
 sptr< Dictionary::WordSearchRequest > BtreeDictionary::stemmedMatch(
   wstring const & str, unsigned minLength, unsigned maxSuffixVariation,
   unsigned long maxResults )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new BtreeWordSearchRequest( *this, str, minLength, (int)maxSuffixVariation,
                                      false, maxResults );
diff --git a/btreeidx.hh b/btreeidx.hh
index 30817a9..bead5dd 100644
--- a/btreeidx.hh
+++ b/btreeidx.hh
@@ -13,6 +13,7 @@
 #include <QVector>
 #include <QSet>
 #include <QList>
+#include "cpp_features.hh"
 
 #if defined( _MSC_VER ) && _MSC_VER < 1800 // VS2012 and older
 #include <stdint_msvc.h>
@@ -165,13 +166,13 @@ public:
   /// need not to implement this function.
   virtual sptr< Dictionary::WordSearchRequest > prefixMatch( wstring const &,
                                                              unsigned long )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::WordSearchRequest > stemmedMatch( wstring const &,
                                                               unsigned minLength,
                                                               unsigned maxSuffixVariation,
                                                               unsigned long maxResults )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual bool isLocalDictionary()
   { return true; }
diff --git a/chinese.cc b/chinese.cc
index 0e49e6e..e51589c 100644
--- a/chinese.cc
+++ b/chinese.cc
@@ -109,7 +109,7 @@ std::vector< gd::wstring > CharacterConversionDictionary::getAlternateWritings(
 }
 
 std::vector< sptr< Dictionary::Class > > makeDictionaries( Config::Chinese const & cfg )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   std::vector< sptr< Dictionary::Class > > result;
 
diff --git a/chinese.hh b/chinese.hh
index dabd232..162e057 100644
--- a/chinese.hh
+++ b/chinese.hh
@@ -12,7 +12,7 @@
 namespace Chinese {
 
 std::vector< sptr< Dictionary::Class > > makeDictionaries( Config::Chinese const & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/config.cc b/config.cc
index 9b27b31..966120a 100644
--- a/config.cc
+++ b/config.cc
@@ -314,7 +314,7 @@ void saveMutedDictionaries( QDomDocument & dd, QDomElement & muted,
 
 }
 
-Class load() throw( exError )
+Class load() THROW_SPEC( exError )
 {
   QString configName  = getConfigFileName();
 
@@ -1094,7 +1094,7 @@ void saveGroup( Group const & data, QDomElement & group )
 
 }
 
-void save( Class const & c ) throw( exError )
+void save( Class const & c ) THROW_SPEC( exError )
 {
   QFile configFile( getConfigFileName() + ".tmp" );
 
@@ -1955,12 +1955,12 @@ QString getConfigFileName()
   return getHomeDir().absoluteFilePath( "config" );
 }
 
-QString getConfigDir() throw( exError )
+QString getConfigDir() THROW_SPEC( exError )
 {
   return getHomeDir().path() + QDir::separator();
 }
 
-QString getIndexDir() throw( exError )
+QString getIndexDir() THROW_SPEC( exError )
 {
   QDir result = getHomeDir();
 
@@ -1972,27 +1972,27 @@ QString getIndexDir() throw( exError )
   return result.path() + QDir::separator();
 }
 
-QString getPidFileName() throw( exError )
+QString getPidFileName() THROW_SPEC( exError )
 {
   return getHomeDir().filePath( "pid" );
 }
 
-QString getHistoryFileName() throw( exError )
+QString getHistoryFileName() THROW_SPEC( exError )
 {
   return getHomeDir().filePath( "history" );
 }
 
-QString getUserCssFileName() throw( exError )
+QString getUserCssFileName() THROW_SPEC( exError )
 {
   return getHomeDir().filePath( "article-style.css" );
 }
 
-QString getUserCssPrintFileName() throw( exError )
+QString getUserCssPrintFileName() THROW_SPEC( exError )
 {
   return getHomeDir().filePath( "article-style-print.css" );
 }
 
-QString getUserQtCssFileName() throw( exError )
+QString getUserQtCssFileName() THROW_SPEC( exError )
 {
   return getHomeDir().filePath( "qt-style.css" );
 }
diff --git a/config.hh b/config.hh
index b4cf5ff..a0e3e52 100644
--- a/config.hh
+++ b/config.hh
@@ -11,6 +11,7 @@
 #include <QDateTime>
 #include <QKeySequence>
 #include <QSet>
+#include "cpp_features.hh"
 #include "ex.hh"
 
 #ifdef Q_OS_WIN
@@ -636,35 +637,35 @@ DEF_EX( exCantWriteConfigFile, "Can't write the configuration file", exError )
 DEF_EX( exMalformedConfigFile, "The configuration file is malformed", exError )
 
 /// Loads the configuration, or creates the default one if none is present
-Class load() throw( exError );
+Class load() THROW_SPEC( exError );
 
 /// Saves the configuration
-void save( Class const & ) throw( exError );
+void save( Class const & ) THROW_SPEC( exError );
 
 /// Returns the configuration file name.
 QString getConfigFileName();
 
 /// Returns the main configuration directory.
-QString getConfigDir() throw( exError );
+QString getConfigDir() THROW_SPEC( exError );
 
 /// Returns the index directory, where the indices are to be stored.
-QString getIndexDir() throw( exError );
+QString getIndexDir() THROW_SPEC( exError );
 
 /// Returns the filename of a .pid file which should store current pid of
 /// the process.
-QString getPidFileName() throw( exError );
+QString getPidFileName() THROW_SPEC( exError );
 
 /// Returns the filename of a history file which stores search history.
-QString getHistoryFileName() throw( exError );
+QString getHistoryFileName() THROW_SPEC( exError );
 
 /// Returns the user .css file name.
-QString getUserCssFileName() throw( exError );
+QString getUserCssFileName() THROW_SPEC( exError );
 
 /// Returns the user .css file name used for printing only.
-QString getUserCssPrintFileName() throw( exError );
+QString getUserCssPrintFileName() THROW_SPEC( exError );
 
 /// Returns the user .css file name for the Qt interface customization.
-QString getUserQtCssFileName() throw( exError );
+QString getUserQtCssFileName() THROW_SPEC( exError );
 
 /// Returns the program's data dir. Under Linux that would be something like
 /// /usr/share/apps/goldendict, under Windows C:/Program Files/GoldenDict.
diff --git a/cpp_features.hh b/cpp_features.hh
new file mode 100644
index 0000000..e15544b
--- /dev/null
+++ b/cpp_features.hh
@@ -0,0 +1,10 @@
+#ifndef __CPP_HH_INCLUDED__
+#define __CPP_HH_INCLUDED__
+
+#if __cplusplus > 199711L
+#define THROW_SPEC(...)
+#else
+#define THROW_SPEC(...) throw(__VA_ARGS__)
+#endif
+
+#endif // CPP_HH
diff --git a/delegate.cc b/delegate.cc
index 574697c..62ad448 100644
--- a/delegate.cc
+++ b/delegate.cc
@@ -10,7 +10,11 @@ QStyledItemDelegate()
 
 void WordListItemDelegate::paint( QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index ) const
 {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 0, 0)
+  QStyleOptionViewItem opt4 = option;
+#else
   QStyleOptionViewItemV4 opt4 = option;
+#endif
   QStyleOptionViewItem opt = option;
   initStyleOption( &opt4, index );
   if( opt4.text.isRightToLeft() )
diff --git a/dictdfiles.cc b/dictdfiles.cc
index cbd0a68..ddf4560 100644
--- a/dictdfiles.cc
+++ b/dictdfiles.cc
@@ -121,7 +121,7 @@ public:
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual QString const& getDescription();
 
@@ -249,7 +249,7 @@ uint32_t decodeBase64( string const & str )
 sptr< Dictionary::DataRequest > DictdDictionary::getArticle( wstring const & word,
                                                              vector< wstring > const & alts,
                                                              wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   try
   {
@@ -550,7 +550,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/dictdfiles.hh b/dictdfiles.hh
index 663ec19..a71a1e6 100644
--- a/dictdfiles.hh
+++ b/dictdfiles.hh
@@ -16,7 +16,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 }
 
diff --git a/dictionary.cc b/dictionary.cc
index cd5c5c6..69af699 100644
--- a/dictionary.cc
+++ b/dictionary.cc
@@ -73,7 +73,7 @@ size_t WordSearchRequest::matchesCount()
   return matches.size();
 }
 
-WordMatch WordSearchRequest::operator [] ( size_t index ) throw( exIndexOutOfRange )
+WordMatch WordSearchRequest::operator [] ( size_t index ) THROW_SPEC( exIndexOutOfRange )
 {
   Mutex::Lock _( dataMutex );
   
@@ -83,7 +83,7 @@ WordMatch WordSearchRequest::operator [] ( size_t index ) throw( exIndexOutOfRan
   return matches[ index ];
 }
 
-vector< WordMatch > & WordSearchRequest::getAllMatches() throw( exRequestUnfinished )
+vector< WordMatch > & WordSearchRequest::getAllMatches() THROW_SPEC( exRequestUnfinished )
 {
   if ( !isFinished() )
     throw exRequestUnfinished();
@@ -112,7 +112,7 @@ long DataRequest::dataSize()
 }
 
 void DataRequest::getDataSlice( size_t offset, size_t size, void * buffer )
-  throw( exSliceOutOfRange )
+  THROW_SPEC( exSliceOutOfRange )
 {
   if ( size == 0 )
     return;
@@ -125,7 +125,7 @@ void DataRequest::getDataSlice( size_t offset, size_t size, void * buffer )
   memcpy( buffer, &data[ offset ], size );
 }
 
-vector< char > & DataRequest::getFullData() throw( exRequestUnfinished )
+vector< char > & DataRequest::getFullData() THROW_SPEC( exRequestUnfinished )
 {
   if ( !isFinished() )
     throw exRequestUnfinished();
@@ -147,13 +147,13 @@ sptr< WordSearchRequest > Class::stemmedMatch( wstring const & /*str*/,
                                                unsigned /*minLength*/,
                                                unsigned /*maxSuffixVariation*/,
                                                unsigned long /*maxResults*/ )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new WordSearchRequestInstant();
 }
 
 sptr< WordSearchRequest > Class::findHeadwordsForSynonym( wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new WordSearchRequestInstant();
 }
@@ -165,7 +165,7 @@ vector< wstring > Class::getAlternateWritings( wstring const & )
 }
 
 sptr< DataRequest > Class::getResource( string const & /*name*/ )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new DataRequestInstant( false );
 }
diff --git a/dictionary.hh b/dictionary.hh
index b41842e..3581c45 100644
--- a/dictionary.hh
+++ b/dictionary.hh
@@ -9,6 +9,7 @@
 #include <map>
 #include <QObject>
 #include <QIcon>
+#include "cpp_features.hh"
 #include "sptr.hh"
 #include "ex.hh"
 #include "mutex.hh"
@@ -143,11 +144,11 @@ public:
 
   /// Returns the match with the given zero-based index, which should be less
   /// than matchesCount().
-  WordMatch operator [] ( size_t index ) throw( exIndexOutOfRange );
+  WordMatch operator [] ( size_t index ) THROW_SPEC( exIndexOutOfRange );
 
   /// Returns all the matches found. Since no further locking can or would be
   /// done, this can only be called after the request has finished.
-  vector< WordMatch > & getAllMatches() throw( exRequestUnfinished );
+  vector< WordMatch > & getAllMatches() THROW_SPEC( exRequestUnfinished );
 
   /// Returns true if the match was uncertain -- that is, there may be more
   /// results in the dictionary itself, the dictionary index isn't good enough
@@ -187,11 +188,11 @@ public:
   /// Writes "size" bytes starting from "offset" of the data read to the given
   /// buffer. "size + offset" must be <= than dataSize().
   void getDataSlice( size_t offset, size_t size, void * buffer )
-    throw( exSliceOutOfRange );
+    THROW_SPEC( exSliceOutOfRange );
 
   /// Returns all the data read. Since no further locking can or would be
   /// done, this can only be called after the request has finished.
-  vector< char > & getFullData() throw( exRequestUnfinished );
+  vector< char > & getFullData() THROW_SPEC( exRequestUnfinished );
 
   DataRequest(): hasAnyData( false ) {}
 
@@ -342,7 +343,7 @@ public:
   /// be stored. The whole operation is supposed to be fast, though some
   /// dictionaries, the network ones particularly, may of course be slow.
   virtual sptr< WordSearchRequest > prefixMatch( wstring const &,
-                                                 unsigned long maxResults ) throw( std::exception )=0;
+                                                 unsigned long maxResults ) THROW_SPEC( std::exception )=0;
 
   /// Looks up a given word in the dictionary, aiming to find different forms
   /// of the given word by allowing suffix variations. This means allowing words
@@ -355,14 +356,14 @@ public:
   virtual sptr< WordSearchRequest > stemmedMatch( wstring const &,
                                                   unsigned minLength,
                                                   unsigned maxSuffixVariation,
-                                                  unsigned long maxResults ) throw( std::exception );
+                                                  unsigned long maxResults ) THROW_SPEC( std::exception );
 
   /// Finds known headwords for the given word, that is, the words for which
   /// the given word is a synonym. If a dictionary can't perform this operation,
   /// it should leave the default implementation which always returns an empty
   /// result.
   virtual sptr< WordSearchRequest > findHeadwordsForSynonym( wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   /// For a given word, provides alternate writings of it which are to be looked
   /// up alongside with it. Transliteration dictionaries implement this. The
@@ -382,14 +383,14 @@ public:
   virtual sptr< DataRequest > getArticle( wstring const &,
                                           vector< wstring > const & alts,
                                           wstring const & context = wstring() )
-    throw( std::exception )=0;
+    THROW_SPEC( std::exception )=0;
 
   /// Loads contents of a resource named 'name' into the 'data' vector. This is
   /// usually a picture file referenced in the article or something like that.
   /// The default implementation always returns the non-existing resource
   /// response.
   virtual sptr< DataRequest > getResource( string const & /*name*/ )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   /// Returns a results of full-text search of given string similar getArticle().
   virtual sptr< DataRequest > getSearchResults( QString const & searchString,
diff --git a/dictserver.cc b/dictserver.cc
index 0d598f2..0ec86c6 100644
--- a/dictserver.cc
+++ b/dictserver.cc
@@ -196,11 +196,11 @@ public:
   { return 0; }
 
   virtual sptr< WordSearchRequest > prefixMatch( wstring const &,
-                                                 unsigned long maxResults ) throw( std::exception );
+                                                 unsigned long maxResults ) THROW_SPEC( std::exception );
 
   virtual sptr< DataRequest > getArticle( wstring const &, vector< wstring > const & alts,
                                           wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual quint32 getLangFrom() const
   { return langId; }
@@ -823,7 +823,7 @@ void DictServerArticleRequest::cancel()
 
 sptr< WordSearchRequest > DictServerDictionary::prefixMatch( wstring const & word,
                                                              unsigned long maxResults )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   (void) maxResults;
   if ( word.size() > 80 )
@@ -839,7 +839,7 @@ sptr< WordSearchRequest > DictServerDictionary::prefixMatch( wstring const & wor
 sptr< DataRequest > DictServerDictionary::getArticle( wstring const & word,
                                                       vector< wstring > const &,
                                                       wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   if ( word.size() > 80 )
   {
@@ -854,7 +854,7 @@ sptr< DataRequest > DictServerDictionary::getArticle( wstring const & word,
 } // Anonimuos namespace
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::DictServers const & servers )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
 
diff --git a/dictserver.hh b/dictserver.hh
index 1755da5..39d093e 100644
--- a/dictserver.hh
+++ b/dictserver.hh
@@ -12,7 +12,7 @@ using std::string;
 
 vector< sptr< Dictionary::Class > > makeDictionaries(
                                       Config::DictServers const & servers )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 }
 
diff --git a/dsl.cc b/dsl.cc
index f610c1a..50eea31 100644
--- a/dsl.cc
+++ b/dsl.cc
@@ -200,7 +200,7 @@ public:
 
   #if 0
   virtual vector< wstring > findHeadwordsForSynonym( wstring const & )
-    throw( std::exception )
+    THROW_SPEC( std::exception )
   {
     return vector< wstring >();
   }
@@ -209,10 +209,10 @@ public:
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getSearchResults( QString const & searchString,
                                                             int searchMode, bool matchCase,
@@ -1673,7 +1673,7 @@ void DslArticleRequest::run()
 sptr< Dictionary::DataRequest > DslDictionary::getArticle( wstring const & word,
                                                            vector< wstring > const & alts,
                                                            wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new DslArticleRequest( word, alts, *this );
 }
@@ -1852,7 +1852,7 @@ void DslResourceRequest::run()
 }
 
 sptr< Dictionary::DataRequest > DslDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new DslResourceRequest( *this, name );
 }
@@ -1911,7 +1911,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing,
                                       int maxPictureWidth, unsigned int maxHeadwordSize )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/dsl.hh b/dsl.hh
index e39b071..958cbed 100644
--- a/dsl.hh
+++ b/dsl.hh
@@ -17,7 +17,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       string const & indicesDir,
                                       Dictionary::Initializing &,
                                       int maxPictureWidth, unsigned int maxHeadwordSize )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 }
 
diff --git a/dsl_details.cc b/dsl_details.cc
index 1789c61..6c9da01 100644
--- a/dsl_details.cc
+++ b/dsl_details.cc
@@ -634,7 +634,7 @@ void ArticleDom::closeTag( wstring const & name,
   }
 }
 
-void ArticleDom::nextChar() throw( eot )
+void ArticleDom::nextChar() THROW_SPEC( eot )
 {
   if ( !*stringPos )
     throw eot();
@@ -669,7 +669,7 @@ void ArticleDom::nextChar() throw( eot )
 
 /////////////// DslScanner
 
-DslScanner::DslScanner( string const & fileName ) throw( Ex, Iconv::Ex ):
+DslScanner::DslScanner( string const & fileName ) THROW_SPEC( Ex, Iconv::Ex ):
   encoding( Windows1252 ), iconv( encoding ), readBufferPtr( readBuffer ),
   readBufferLeft( 0 ), wcharBuffer( 64 ), linesRead( 0 )
 {
@@ -835,7 +835,7 @@ DslScanner::~DslScanner() throw()
   gzclose( f );
 }
 
-bool DslScanner::readNextLine( wstring & out, size_t & offset ) throw( Ex,
+bool DslScanner::readNextLine( wstring & out, size_t & offset ) THROW_SPEC( Ex,
                                                                        Iconv::Ex )
 {
   offset = (size_t)( gztell( f ) - readBufferLeft );
@@ -941,7 +941,7 @@ bool DslScanner::readNextLine( wstring & out, size_t & offset ) throw( Ex,
 }
 
 bool DslScanner::readNextLineWithoutComments( wstring & out, size_t & offset )
-                 throw( Ex, Iconv::Ex )
+                 THROW_SPEC( Ex, Iconv::Ex )
 {
   wstring str;
   bool commentToNextLine = false;
@@ -971,12 +971,12 @@ bool DslScanner::readNextLineWithoutComments( wstring & out, size_t & offset )
 
 /////////////// DslScanner
 
-DslIconv::DslIconv( DslEncoding e ) throw( Iconv::Ex ):
+DslIconv::DslIconv( DslEncoding e ) THROW_SPEC( Iconv::Ex ):
   Iconv( Iconv::GdWchar, getEncodingNameFor( e ) )
 {
 }
 
-void DslIconv::reinit( DslEncoding e ) throw( Iconv::Ex )
+void DslIconv::reinit( DslEncoding e ) THROW_SPEC( Iconv::Ex )
 {
   Iconv::reinit( Iconv::GdWchar, getEncodingNameFor( e ) );
 }
diff --git a/dsl_details.hh b/dsl_details.hh
index f2eff05..2edaecb 100644
--- a/dsl_details.hh
+++ b/dsl_details.hh
@@ -83,7 +83,7 @@ private:
   bool escaped;
   unsigned transcriptionCount; // >0 = inside a [t] tag
 
-  void nextChar() throw( eot );
+  void nextChar() THROW_SPEC( eot );
 
   /// Infomation for diagnostic purposes
   string dictionaryName;
@@ -94,8 +94,8 @@ private:
 class DslIconv: public Iconv
 {
 public:
-  DslIconv( DslEncoding ) throw( Iconv::Ex );
-  void reinit( DslEncoding ) throw( Iconv::Ex );
+  DslIconv( DslEncoding ) THROW_SPEC( Iconv::Ex );
+  void reinit( DslEncoding ) THROW_SPEC( Iconv::Ex );
 
   /// Returns a name to be passed to iconv for the given dsl encoding.
   static char const * getEncodingNameFor( DslEncoding );
@@ -125,7 +125,7 @@ public:
   DEF_EX( exUnknownCodePage, "The .dsl file specified an unknown code page", Ex )
   DEF_EX( exEncodingError, "Encoding error", Ex ) // Should never happen really
 
-  DslScanner( string const & fileName ) throw( Ex, Iconv::Ex );
+  DslScanner( string const & fileName ) THROW_SPEC( Ex, Iconv::Ex );
   ~DslScanner() throw();
 
   /// Returns the detected encoding of this file.
@@ -150,10 +150,10 @@ public:
   /// If end of file is reached, false is returned.
   /// Reading begins from the first line after the headers (ones which start
   /// with #).
-  bool readNextLine( wstring &, size_t & offset ) throw( Ex, Iconv::Ex );
+  bool readNextLine( wstring &, size_t & offset ) THROW_SPEC( Ex, Iconv::Ex );
 
   /// Similar readNextLine but strip all DSL comments {{...}}
-  bool readNextLineWithoutComments( wstring &, size_t & offset ) throw( Ex, Iconv::Ex );
+  bool readNextLineWithoutComments( wstring &, size_t & offset ) THROW_SPEC( Ex, Iconv::Ex );
 
   /// Returns the number of lines read so far from the file.
   unsigned getLinesRead() const
diff --git a/epwing.cc b/epwing.cc
index f2234b0..829fccd 100644
--- a/epwing.cc
+++ b/epwing.cc
@@ -120,10 +120,10 @@ public:
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getSearchResults( QString const & searchString,
                                                             int searchMode, bool matchCase,
@@ -151,13 +151,13 @@ public:
 
   virtual sptr< Dictionary::WordSearchRequest > prefixMatch( wstring const &,
                                                              unsigned long )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::WordSearchRequest > stemmedMatch( wstring const &,
                                                               unsigned minLength,
                                                               unsigned maxSuffixVariation,
                                                               unsigned long maxResults )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -646,7 +646,7 @@ void EpwingArticleRequest::run()
 sptr< Dictionary::DataRequest > EpwingDictionary::getArticle( wstring const & word,
                                                               vector< wstring > const & alts,
                                                               wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new EpwingArticleRequest( word, alts, *this );
 }
@@ -774,7 +774,7 @@ void EpwingResourceRequest::run()
 }
 
 sptr< Dictionary::DataRequest > EpwingDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new EpwingResourceRequest( *this, name );
 }
@@ -919,7 +919,7 @@ void EpwingWordSearchRequest::findMatches()
 
 sptr< Dictionary::WordSearchRequest > EpwingDictionary::prefixMatch(
   wstring const & str, unsigned long maxResults )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new EpwingWordSearchRequest( *this, str, 0, -1, true, maxResults );
 }
@@ -927,7 +927,7 @@ sptr< Dictionary::WordSearchRequest > EpwingDictionary::prefixMatch(
 sptr< Dictionary::WordSearchRequest > EpwingDictionary::stemmedMatch(
   wstring const & str, unsigned minLength, unsigned maxSuffixVariation,
   unsigned long maxResults )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new EpwingWordSearchRequest( *this, str, minLength, (int)maxSuffixVariation,
                                       false, maxResults );
@@ -939,7 +939,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/epwing.hh b/epwing.hh
index 4792c56..9b94e3d 100644
--- a/epwing.hh
+++ b/epwing.hh
@@ -13,7 +13,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 }
 
 #endif // __EPWING_HH__INCLUDED__
diff --git a/externalviewer.cc b/externalviewer.cc
index 5a56f0a..0699eb0 100644
--- a/externalviewer.cc
+++ b/externalviewer.cc
@@ -11,7 +11,7 @@ using std::vector;
 ExternalViewer::ExternalViewer( QObject * parent, vector< char > const & data,
                                 QString const & extension,
                                 QString const & viewerCmdLine_ )
-    throw( exCantCreateTempFile ):
+    THROW_SPEC( exCantCreateTempFile ):
   QObject( parent ),
   tempFile( QDir::temp().filePath( QString( "gd-XXXXXXXX." ) + extension ) ),
   viewer( this ),
@@ -32,7 +32,7 @@ ExternalViewer::ExternalViewer( QObject * parent, vector< char > const & data,
   GD_DPRINTF( "%s\n", tempFile.fileName().toLocal8Bit().data() );
 }
 
-void ExternalViewer::start() throw( exCantRunViewer )
+void ExternalViewer::start() THROW_SPEC( exCantRunViewer )
 {
   connect( &viewer, SIGNAL( finished( int, QProcess::ExitStatus ) ),
            this, SLOT( deleteLater() ) );
diff --git a/externalviewer.hh b/externalviewer.hh
index 832ed50..942e249 100644
--- a/externalviewer.hh
+++ b/externalviewer.hh
@@ -9,6 +9,7 @@
 #include <QProcess>
 #include <vector>
 #include "ex.hh"
+#include "cpp_features.hh"
 
 /// An external viewer, opens resources in other programs
 class ExternalViewer: public QObject
@@ -28,11 +29,11 @@ public:
 
   ExternalViewer( QObject * parent, std::vector< char > const & data,
                   QString const & extension, QString const & viewerCmdLine )
-    throw( exCantCreateTempFile );
+    THROW_SPEC( exCantCreateTempFile );
 
   // Once this is called, the object will be deleted when it's done, even if
   // the function throws.
-  void start() throw( exCantRunViewer );
+  void start() THROW_SPEC( exCantRunViewer );
 };
 
 #endif
diff --git a/file.cc b/file.cc
index faa9fdb..da214fe 100644
--- a/file.cc
+++ b/file.cc
@@ -68,7 +68,7 @@ bool exists( char const * filename ) throw()
 #endif
 }
 
-void Class::open( char const * filename, char const * mode ) throw( exCantOpen )
+void Class::open( char const * filename, char const * mode ) THROW_SPEC( exCantOpen )
 {
   QFile::OpenMode openMode = QIODevice::Text;
   const char * pch = mode;
@@ -98,19 +98,19 @@ void Class::open( char const * filename, char const * mode ) throw( exCantOpen )
     throw exCantOpen( std::string( filename ) + ": " + strerror( errno ) );
 }
 
-Class::Class( char const * filename, char const * mode ) throw( exCantOpen ):
+Class::Class( char const * filename, char const * mode ) THROW_SPEC( exCantOpen ):
   writeBuffer( 0 )
 {
   open( filename, mode );
 }
 
 Class::Class( std::string const & filename, char const * mode )
-  throw( exCantOpen ): writeBuffer( 0 )
+  THROW_SPEC( exCantOpen ): writeBuffer( 0 )
 {
   open( filename.c_str(), mode );
 }
 
-void Class::read( void * buf, qint64 size ) throw( exReadError, exWriteError )
+void Class::read( void * buf, qint64 size ) THROW_SPEC( exReadError, exWriteError )
 {
   if ( !size )
     return;
@@ -124,7 +124,7 @@ void Class::read( void * buf, qint64 size ) throw( exReadError, exWriteError )
     throw exReadError();
 }
 
-size_t Class::readRecords( void * buf, qint64 size, size_t count ) throw( exWriteError )
+size_t Class::readRecords( void * buf, qint64 size, size_t count ) THROW_SPEC( exWriteError )
 {
   if ( writeBuffer )
     flushWriteBuffer();
@@ -133,7 +133,7 @@ size_t Class::readRecords( void * buf, qint64 size, size_t count ) throw( exWrit
   return result < 0 ? result : result / size;
 }
 
-void Class::write( void const * buf, qint64 size ) throw( exWriteError, exAllocation )
+void Class::write( void const * buf, qint64 size ) THROW_SPEC( exWriteError, exAllocation )
 {
   if ( !size )
     return;
@@ -181,7 +181,7 @@ void Class::write( void const * buf, qint64 size ) throw( exWriteError, exAlloca
 }
 
 size_t Class::writeRecords( void const * buf, qint64 size, size_t count )
-  throw( exWriteError )
+  THROW_SPEC( exWriteError )
 {
   flushWriteBuffer();
 
@@ -190,7 +190,7 @@ size_t Class::writeRecords( void const * buf, qint64 size, size_t count )
 }
 
 char * Class::gets( char * s, int size, bool stripNl )
-  throw( exWriteError )
+  THROW_SPEC( exWriteError )
 {
   if ( writeBuffer )
     flushWriteBuffer();
@@ -217,7 +217,7 @@ char * Class::gets( char * s, int size, bool stripNl )
   return result;
 }
 
-std::string Class::gets( bool stripNl ) throw( exReadError, exWriteError )
+std::string Class::gets( bool stripNl ) THROW_SPEC( exReadError, exWriteError )
 {
   char buf[ 1024 ];
 
@@ -227,7 +227,7 @@ std::string Class::gets( bool stripNl ) throw( exReadError, exWriteError )
   return std::string( buf );
 }
 
-void Class::seek( long offset ) throw( exSeekError, exWriteError )
+void Class::seek( long offset ) THROW_SPEC( exSeekError, exWriteError )
 {
   if ( writeBuffer )
     flushWriteBuffer();
@@ -236,7 +236,7 @@ void Class::seek( long offset ) throw( exSeekError, exWriteError )
     throw exSeekError();
 }
 
-void Class::seekCur( long offset ) throw( exSeekError, exWriteError )
+void Class::seekCur( long offset ) THROW_SPEC( exSeekError, exWriteError )
 {
   if ( writeBuffer )
     flushWriteBuffer();
@@ -245,7 +245,7 @@ void Class::seekCur( long offset ) throw( exSeekError, exWriteError )
     throw exSeekError();
 }
 
-void Class::seekEnd( long offset ) throw( exSeekError, exWriteError )
+void Class::seekEnd( long offset ) THROW_SPEC( exSeekError, exWriteError )
 {
   if ( writeBuffer )
     flushWriteBuffer();
@@ -254,12 +254,12 @@ void Class::seekEnd( long offset ) throw( exSeekError, exWriteError )
     throw exSeekError();
 }
 
-void Class::rewind() throw( exSeekError, exWriteError )
+void Class::rewind() THROW_SPEC( exSeekError, exWriteError )
 {
   seek( 0 );
 }
 
-size_t Class::tell() throw( exSeekError )
+size_t Class::tell() THROW_SPEC( exSeekError )
 {
   qint64 result = f.pos();
 
@@ -272,7 +272,7 @@ size_t Class::tell() throw( exSeekError )
   return ( size_t ) result;
 }
 
-bool Class::eof() throw( exWriteError )
+bool Class::eof() THROW_SPEC( exWriteError )
 {
   if ( writeBuffer )
     flushWriteBuffer();
@@ -280,14 +280,14 @@ bool Class::eof() throw( exWriteError )
   return f.atEnd();
 }
 
-QFile & Class::file() throw( exWriteError )
+QFile & Class::file() THROW_SPEC( exWriteError )
 {
   flushWriteBuffer();
 
   return f;
 }
 
-void Class::close() throw( exWriteError )
+void Class::close() THROW_SPEC( exWriteError )
 {
   releaseWriteBuffer();
   f.close();
@@ -308,7 +308,7 @@ Class::~Class() throw()
   }
 }
 
-void Class::flushWriteBuffer() throw( exWriteError )
+void Class::flushWriteBuffer() THROW_SPEC( exWriteError )
 {
   if ( writeBuffer && writeBufferLeft != WriteBufferSize )
   {
@@ -321,7 +321,7 @@ void Class::flushWriteBuffer() throw( exWriteError )
   }
 }
 
-void Class::releaseWriteBuffer() throw( exWriteError )
+void Class::releaseWriteBuffer() THROW_SPEC( exWriteError )
 {
   flushWriteBuffer();
 
diff --git a/file.hh b/file.hh
index f2c28ac..b80f4ed 100644
--- a/file.hh
+++ b/file.hh
@@ -8,6 +8,7 @@
 #include <string>
 #include <vector>
 #include <QFile>
+#include "cpp_features.hh"
 #include "ex.hh"
 
 /// A simple wrapper over FILE * operations with added write-buffering,
@@ -39,29 +40,29 @@ class Class
   char * writeBuffer;
   qint64 writeBufferLeft;
 
-  void open( char const * filename, char const * mode ) throw( exCantOpen );
+  void open( char const * filename, char const * mode ) THROW_SPEC( exCantOpen );
 
 public:
 
-  Class( char const * filename, char const * mode ) throw( exCantOpen );
+  Class( char const * filename, char const * mode ) THROW_SPEC( exCantOpen );
 
-  Class( std::string const & filename, char const * mode ) throw( exCantOpen );
+  Class( std::string const & filename, char const * mode ) THROW_SPEC( exCantOpen );
 
   /// Reads the number of bytes to the buffer, throws an error if it
   /// failed to fill the whole buffer (short read, i/o error etc).
-  void read( void * buf, qint64 size ) throw( exReadError, exWriteError );
+  void read( void * buf, qint64 size ) THROW_SPEC( exReadError, exWriteError );
 
   template< typename T >
-  void read( T & value ) throw( exReadError, exWriteError )
+  void read( T & value ) THROW_SPEC( exReadError, exWriteError )
   { read( &value, sizeof( value ) ); }
 
   template< typename T >
-  T read() throw( exReadError, exWriteError )
+  T read() THROW_SPEC( exReadError, exWriteError )
   { T value; read( value ); return value; }
 
   /// Attempts reading at most 'count' records sized 'size'. Returns
   /// the number of records it managed to read, up to 'count'.
-  size_t readRecords( void * buf, qint64 size, size_t count ) throw( exWriteError );
+  size_t readRecords( void * buf, qint64 size, size_t count ) THROW_SPEC( exWriteError );
 
   /// Writes the number of bytes from the buffer, throws an error if it
   /// failed to write the whole buffer (short write, i/o error etc).
@@ -69,10 +70,10 @@ public:
   /// end up on disk immediately, or a short write may occur later
   /// than it really did. If you don't want write buffering, use
   /// writeRecords() function instead.
-  void write( void const * buf, qint64 size ) throw( exWriteError, exAllocation );
+  void write( void const * buf, qint64 size ) THROW_SPEC( exWriteError, exAllocation );
 
   template< typename T >
-  void write( T const & value ) throw( exWriteError )
+  void write( T const & value ) THROW_SPEC( exWriteError )
   { write( &value, sizeof( value ) ); }
 
   /// Attempts writing at most 'count' records sized 'size'. Returns
@@ -80,46 +81,46 @@ public:
   /// This function does not employ buffering, but flushes the buffer if it
   /// was used before.
   size_t writeRecords( void const * buf, qint64 size, size_t count )
-    throw( exWriteError );
+    THROW_SPEC( exWriteError );
 
   /// Reads a string from the file. Unlike the normal fgets(), this one
   /// can strip the trailing newline character, if this was requested.
   /// Returns either s or 0 if no characters were read.
-  char * gets( char * s, int size, bool stripNl = false ) throw( exWriteError );
+  char * gets( char * s, int size, bool stripNl = false ) THROW_SPEC( exWriteError );
 
   /// Like the above, but uses its own local internal buffer (1024 bytes
   /// currently), and strips newlines by default.
-  std::string gets( bool stripNl = true ) throw( exReadError, exWriteError );
+  std::string gets( bool stripNl = true ) THROW_SPEC( exReadError, exWriteError );
 
   /// Seeks in the file, relative to its beginning.
-  void seek( long offset ) throw( exSeekError, exWriteError );
+  void seek( long offset ) THROW_SPEC( exSeekError, exWriteError );
   /// Seeks in the file, relative to the current position.
-  void seekCur( long offset ) throw( exSeekError, exWriteError );
+  void seekCur( long offset ) THROW_SPEC( exSeekError, exWriteError );
   /// Seeks in the file, relative to the end of file.
-  void seekEnd( long offset = 0 ) throw( exSeekError, exWriteError );
+  void seekEnd( long offset = 0 ) THROW_SPEC( exSeekError, exWriteError );
 
   /// Seeks to the beginning of file
-  void rewind() throw( exSeekError, exWriteError );
+  void rewind() THROW_SPEC( exSeekError, exWriteError );
 
   /// Tells the current position within the file, relative to its beginning.
-  size_t tell() throw( exSeekError );
+  size_t tell() THROW_SPEC( exSeekError );
 
   /// Returns true if end-of-file condition is set.
-  bool eof() throw( exWriteError );
+  bool eof() THROW_SPEC( exWriteError );
 
   /// Returns the underlying FILE * record, so other operations can be
   /// performed on it.
-  QFile & file() throw( exWriteError );
+  QFile & file() THROW_SPEC( exWriteError );
 
   /// Closes the file. No further operations are valid.
-  void close() throw( exWriteError );
+  void close() THROW_SPEC( exWriteError );
 
   ~Class() throw();
 
 private:
 
-  void flushWriteBuffer() throw( exWriteError );
-  void releaseWriteBuffer() throw( exWriteError );
+  void flushWriteBuffer() THROW_SPEC( exWriteError );
+  void releaseWriteBuffer() THROW_SPEC( exWriteError );
 };
 
 }
diff --git a/forvo.cc b/forvo.cc
index 78c9999..304e762 100644
--- a/forvo.cc
+++ b/forvo.cc
@@ -55,7 +55,7 @@ public:
   { return 0; }
 
   virtual sptr< WordSearchRequest > prefixMatch( wstring const & /*word*/,
-                                                 unsigned long /*maxResults*/ ) throw( std::exception )
+                                                 unsigned long /*maxResults*/ ) THROW_SPEC( std::exception )
   {
     sptr< WordSearchRequestInstant > sr = new WordSearchRequestInstant;
 
@@ -66,7 +66,7 @@ public:
 
   virtual sptr< DataRequest > getArticle( wstring const &, vector< wstring > const & alts,
                                           wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -77,7 +77,7 @@ protected:
 sptr< DataRequest > ForvoDictionary::getArticle( wstring const & word,
                                                  vector< wstring > const & alts,
                                                  wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   if ( word.size() > 80 )
   {
@@ -367,7 +367,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       Dictionary::Initializing &,
                                       Config::Forvo const & forvo,
                                       QNetworkAccessManager & mgr )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
 
diff --git a/forvo.hh b/forvo.hh
index c1c524f..c9588ed 100644
--- a/forvo.hh
+++ b/forvo.hh
@@ -21,7 +21,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       Dictionary::Initializing &,
                                       Config::Forvo const &,
                                       QNetworkAccessManager & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 /// Exposed here for moc
 class ForvoArticleRequest: public Dictionary::DataRequest
diff --git a/gddebug.hh b/gddebug.hh
index 305863c..682e5cc 100644
--- a/gddebug.hh
+++ b/gddebug.hh
@@ -4,8 +4,8 @@
 #include <QFile>
 
 #ifdef NO_CONSOLE
-#define GD_DPRINTF(...)
-#define GD_FDPRINTF(...)
+#define GD_DPRINTF(...) {}
+#define GD_FDPRINTF(...) {}
 #else
 #define GD_DPRINTF(...) printf(__VA_ARGS__)
 #define GD_FDPRINTF(...) fprintf(__VA_ARGS__)
diff --git a/german.cc b/german.cc
index 6ad00e8..402896c 100644
--- a/german.cc
+++ b/german.cc
@@ -40,7 +40,7 @@ GermanTable::GermanTable()
 
 }
 
-sptr< Dictionary::Class > makeDictionary() throw( std::exception )
+sptr< Dictionary::Class > makeDictionary() THROW_SPEC( std::exception )
 {
   static GermanTable t;
 
diff --git a/german.hh b/german.hh
index 2d790f6..d4c82d3 100644
--- a/german.hh
+++ b/german.hh
@@ -9,7 +9,7 @@
 // Support for German transliteration
 namespace GermanTranslit {
 
-sptr< Dictionary::Class > makeDictionary() throw( std::exception );
+sptr< Dictionary::Class > makeDictionary() THROW_SPEC( std::exception );
 
 }
 
diff --git a/goldendict.pro b/goldendict.pro
index 9ba9e69..aaca31b 100644
--- a/goldendict.pro
+++ b/goldendict.pro
@@ -98,6 +98,7 @@ win32 {
           LIBS += -l$$HUNSPELL_LIB
         }
     }
+    QMAKE_CXXFLAGS += -Wextra -Wempty-body
 
     LIBS += -liconv \
         -lwsock32 \
@@ -354,7 +355,8 @@ HEADERS += folding.hh \
     dictserver.hh \
     helpwindow.hh \
     slob.hh \
-    ripemd.hh
+    ripemd.hh \
+    cpp_features.hh
 
 FORMS += groups.ui \
     dictgroupwidget.ui \
diff --git a/greektranslit.cc b/greektranslit.cc
index 82cdd74..2533513 100644
--- a/greektranslit.cc
+++ b/greektranslit.cc
@@ -831,7 +831,7 @@ GreekTable::GreekTable()
 
 }
 
-sptr< Dictionary::Class > makeDictionary() throw( std::exception )
+sptr< Dictionary::Class > makeDictionary() THROW_SPEC( std::exception )
 {
   static GreekTable t;
 
diff --git a/greektranslit.hh b/greektranslit.hh
index fcf91a7..9f0d125 100644
--- a/greektranslit.hh
+++ b/greektranslit.hh
@@ -9,7 +9,7 @@
 // Support for Greek transliteration
 namespace GreekTranslit {
 
-sptr< Dictionary::Class > makeDictionary() throw( std::exception );
+sptr< Dictionary::Class > makeDictionary() THROW_SPEC( std::exception );
 
 }
 
diff --git a/hunspell.cc b/hunspell.cc
index 7d0fe6c..c4cae8e 100644
--- a/hunspell.cc
+++ b/hunspell.cc
@@ -73,15 +73,15 @@ public:
 
   virtual sptr< WordSearchRequest > prefixMatch( wstring const &,
                                                  unsigned long maxResults )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< WordSearchRequest > findHeadwordsForSynonym( wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< DataRequest > getArticle( wstring const &,
                                           vector< wstring > const & alts,
                                           wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual bool isLocalDictionary()
   { return true; }
@@ -339,7 +339,7 @@ void HunspellArticleRequest::run()
 sptr< DataRequest > HunspellDictionary::getArticle( wstring const & word,
                                                     vector< wstring > const &,
                                                     wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new HunspellArticleRequest( word, getHunspellMutex(), hunspell );
 }
@@ -518,7 +518,7 @@ QVector< wstring > suggest( wstring & word, Mutex & hunspellMutex, Hunspell & hu
 
 
 sptr< WordSearchRequest > HunspellDictionary::findHeadwordsForSynonym( wstring const & word )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new HunspellHeadwordsRequest( word, getHunspellMutex(), hunspell );
 }
@@ -633,7 +633,7 @@ void HunspellPrefixMatchRequest::run()
 
 sptr< WordSearchRequest > HunspellDictionary::prefixMatch( wstring const & word,
                                                            unsigned long /*maxResults*/ )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new HunspellPrefixMatchRequest( word, getHunspellMutex(), hunspell );
 }
@@ -776,7 +776,7 @@ wstring decodeFromHunspell( Hunspell & hunspell, char const * str )
 }
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::Hunspell const & cfg )
-    throw( std::exception )
+    THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
 
diff --git a/hunspell.hh b/hunspell.hh
index 3c9e158..bdeb99c 100644
--- a/hunspell.hh
+++ b/hunspell.hh
@@ -34,7 +34,7 @@ struct DataFiles
 vector< DataFiles > findDataFiles( QString const & path );
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::Hunspell const & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/iconv.cc b/iconv.cc
index 30f22a0..ce0fc53 100644
--- a/iconv.cc
+++ b/iconv.cc
@@ -17,14 +17,14 @@ char const * const Iconv::Utf8 = "UTF-8";
 
 using gd::wchar;
 
-Iconv::Iconv( char const * to, char const * from ) throw( exCantInit ):
+Iconv::Iconv( char const * to, char const * from ) THROW_SPEC( exCantInit ):
   state( iconv_open( to, from ) )
 {
   if ( state == (iconv_t) -1 )
     throw exCantInit( strerror( errno ) );
 }
 
-void Iconv::reinit( char const * to, char const * from ) throw( exCantInit )
+void Iconv::reinit( char const * to, char const * from ) THROW_SPEC( exCantInit )
 {
   iconv_close( state );
 
@@ -41,7 +41,7 @@ Iconv::~Iconv() throw()
 
 Iconv::Result Iconv::convert( void const * & inBuf, size_t  & inBytesLeft,
                               void * & outBuf, size_t & outBytesLeft )
-  throw( exIncorrectSeq, exOther )
+  THROW_SPEC( exIncorrectSeq, exOther )
 {
   size_t result = iconv( state,
 //                         #ifdef __WIN32
@@ -72,7 +72,7 @@ Iconv::Result Iconv::convert( void const * & inBuf, size_t  & inBytesLeft,
 
 gd::wstring Iconv::toWstring( char const * fromEncoding, void const * fromData,
                               size_t dataSize )
-  throw( exCantInit, exIncorrectSeq, exPrematureEnd, exOther )
+  THROW_SPEC( exCantInit, exIncorrectSeq, exPrematureEnd, exOther )
 {
   /// Special-case the dataSize == 0 to avoid any kind of iconv-specific
   /// behaviour in that regard.
@@ -113,7 +113,7 @@ gd::wstring Iconv::toWstring( char const * fromEncoding, void const * fromData,
 
 std::string Iconv::toUtf8( char const * fromEncoding, void const * fromData,
                            size_t dataSize )
-  throw( exCantInit, exIncorrectSeq, exPrematureEnd, exOther )
+  THROW_SPEC( exCantInit, exIncorrectSeq, exPrematureEnd, exOther )
 {
   // Similar to toWstring
 
diff --git a/iconv.hh b/iconv.hh
index 5553ebd..02e3fb7 100644
--- a/iconv.hh
+++ b/iconv.hh
@@ -7,6 +7,7 @@
 #include <iconv.h>
 #include "wstring.hh"
 #include "ex.hh"
+#include "cpp_features.hh"
 
 /// A wrapper for the iconv() character set conversion functions
 class Iconv
@@ -27,10 +28,10 @@ public:
   static char const * const Utf16Le;
   static char const * const Utf8;
 
-  Iconv( char const * to, char const * from ) throw( exCantInit );
+  Iconv( char const * to, char const * from ) THROW_SPEC( exCantInit );
 
   // Changes to another pair of encodings. All the internal state is reset.
-  void reinit( char const * to, char const * from ) throw( exCantInit );
+  void reinit( char const * to, char const * from ) THROW_SPEC( exCantInit );
 
   ~Iconv() throw();
 
@@ -42,19 +43,19 @@ public:
   };
 
   Result convert( void const * & inBuf, size_t & inBytesLeft,
-                  void * & outBuf, size_t & outBytesLeft ) throw( exIncorrectSeq,
+                  void * & outBuf, size_t & outBytesLeft ) THROW_SPEC( exIncorrectSeq,
                                                                   exOther );
 
   // Converts a given block of data from the given encoding to a wide string.
   static gd::wstring toWstring( char const * fromEncoding, void const * fromData,
                                  size_t dataSize )
-    throw( exCantInit, exIncorrectSeq, exPrematureEnd, exOther );
+    THROW_SPEC( exCantInit, exIncorrectSeq, exPrematureEnd, exOther );
 
   // Converts a given block of data from the given encoding to an utf8-encoded
   // string.
   static std::string toUtf8( char const * fromEncoding, void const * fromData,
                              size_t dataSize )
-    throw( exCantInit, exIncorrectSeq, exPrematureEnd, exOther );
+    THROW_SPEC( exCantInit, exIncorrectSeq, exPrematureEnd, exOther );
 
 private:
 
diff --git a/lsa.cc b/lsa.cc
index 1f2e692..3fef8cf 100644
--- a/lsa.cc
+++ b/lsa.cc
@@ -178,10 +178,10 @@ public:
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -215,7 +215,7 @@ LsaDictionary::LsaDictionary( string const & id,
 sptr< Dictionary::DataRequest > LsaDictionary::getArticle( wstring const & word,
                                                            vector< wstring > const & alts,
                                                            wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< WordArticleLink > chain = findArticles( word );
 
@@ -393,7 +393,7 @@ __attribute__((packed))
 ;
 
 sptr< Dictionary::DataRequest > LsaDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   // See if the name ends in .wav. Remove that extension then
 
@@ -518,7 +518,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/lsa.hh b/lsa.hh
index 357edcb..6bb2456 100644
--- a/lsa.hh
+++ b/lsa.hh
@@ -16,7 +16,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/mdx.cc b/mdx.cc
index 875a8b8..ccc0c96 100644
--- a/mdx.cc
+++ b/mdx.cc
@@ -242,8 +242,8 @@ public:
 
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const & word,
                                                       vector< wstring > const & alts,
-                                                      wstring const & ) throw( std::exception );
-  virtual sptr< Dictionary::DataRequest > getResource( string const & name ) throw( std::exception );
+                                                      wstring const & ) THROW_SPEC( std::exception );
+  virtual sptr< Dictionary::DataRequest > getResource( string const & name ) THROW_SPEC( std::exception );
   virtual QString const & getDescription();
 
   virtual sptr< Dictionary::DataRequest > getSearchResults( QString const & searchString,
@@ -692,7 +692,7 @@ void MdxArticleRequest::run()
 }
 
 sptr<Dictionary::DataRequest> MdxDictionary::getArticle( const wstring & word, const vector<wstring> & alts,
-                                                         const wstring & ) throw( std::exception )
+                                                         const wstring & ) THROW_SPEC( std::exception )
 {
   return new MdxArticleRequest( word, alts, *this );
 }
@@ -887,7 +887,7 @@ void MddResourceRequest::run()
   finish();
 }
 
-sptr<Dictionary::DataRequest> MdxDictionary::getResource( const string & name ) throw( std::exception )
+sptr<Dictionary::DataRequest> MdxDictionary::getResource( const string & name ) THROW_SPEC( std::exception )
 {
   return new MddResourceRequest( *this, name );
 }
@@ -1151,7 +1151,7 @@ static void findResourceFiles( string const & mdx, vector< string > & dictFiles
 
 vector< sptr< Dictionary::Class > > makeDictionaries( vector< string > const & fileNames,
                                                       string const & indicesDir,
-                                                      Dictionary::Initializing & initializing ) throw( std::exception )
+                                                      Dictionary::Initializing & initializing ) THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/mdx.hh b/mdx.hh
index 82d5223..2b30439 100644
--- a/mdx.hh
+++ b/mdx.hh
@@ -14,7 +14,7 @@ using std::string;
 
 vector< sptr< Dictionary::Class > > makeDictionaries( vector< string > const & fileNames,
                                                       string const & indicesDir,
-                                                      Dictionary::Initializing & ) throw( std::exception );
+                                                      Dictionary::Initializing & ) THROW_SPEC( std::exception );
 
 }
 
diff --git a/mediawiki.cc b/mediawiki.cc
index 67dbb52..9feea2f 100644
--- a/mediawiki.cc
+++ b/mediawiki.cc
@@ -57,11 +57,11 @@ public:
   { return 0; }
 
   virtual sptr< WordSearchRequest > prefixMatch( wstring const &,
-                                                 unsigned long maxResults ) throw( std::exception );
+                                                 unsigned long maxResults ) THROW_SPEC( std::exception );
 
   virtual sptr< DataRequest > getArticle( wstring const &, vector< wstring > const & alts,
                                           wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual quint32 getLangFrom() const
   { return langId; }
@@ -469,7 +469,7 @@ void MediaWikiArticleRequest::requestFinished( QNetworkReply * r )
 
 sptr< WordSearchRequest > MediaWikiDictionary::prefixMatch( wstring const & word,
                                                             unsigned long maxResults )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   (void) maxResults;
   if ( word.size() > 80 )
@@ -485,7 +485,7 @@ sptr< WordSearchRequest > MediaWikiDictionary::prefixMatch( wstring const & word
 sptr< DataRequest > MediaWikiDictionary::getArticle( wstring const & word,
                                                      vector< wstring > const & alts,
                                                      wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   if ( word.size() > 80 )
   {
@@ -503,7 +503,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       Dictionary::Initializing &,
                                       Config::MediaWikis const & wikis,
                                       QNetworkAccessManager & mgr )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
 
diff --git a/mediawiki.hh b/mediawiki.hh
index ca67e6f..e8ba98a 100644
--- a/mediawiki.hh
+++ b/mediawiki.hh
@@ -18,7 +18,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       Dictionary::Initializing &,
                                       Config::MediaWikis const & wikis,
                                       QNetworkAccessManager & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 /// Exposed here for moc
 class MediaWikiWordSearchRequestSlots: public Dictionary::WordSearchRequest
diff --git a/programs.cc b/programs.cc
index f0a4b51..b5db1cd 100644
--- a/programs.cc
+++ b/programs.cc
@@ -43,12 +43,12 @@ public:
 
   virtual sptr< WordSearchRequest > prefixMatch( wstring const & word,
                                                  unsigned long maxResults )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< DataRequest > getArticle( wstring const &,
                                           vector< wstring > const & alts,
                                           wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -57,7 +57,7 @@ protected:
 
 sptr< WordSearchRequest > ProgramsDictionary::prefixMatch( wstring const & word,
                                                            unsigned long /*maxResults*/ )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   if ( prg.type == Config::Program::PrefixMatch )
     return new ProgramWordSearchRequest( gd::toQString( word ), prg );
@@ -73,7 +73,7 @@ sptr< WordSearchRequest > ProgramsDictionary::prefixMatch( wstring const & word,
 
 sptr< Dictionary::DataRequest > ProgramsDictionary::getArticle(
   wstring const & word, vector< wstring > const &, wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   switch( prg.type )
   {
@@ -302,7 +302,7 @@ void ProgramWordSearchRequest::cancel()
 
 vector< sptr< Dictionary::Class > > makeDictionaries(
   Config::Programs const & programs )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
 
diff --git a/programs.hh b/programs.hh
index 581482a..6c11a66 100644
--- a/programs.hh
+++ b/programs.hh
@@ -17,7 +17,7 @@ using std::string;
 using gd::wstring;
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::Programs const & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 class RunInstance: public QObject
 {
diff --git a/romaji.cc b/romaji.cc
index 26d0014..748bb2e 100644
--- a/romaji.cc
+++ b/romaji.cc
@@ -92,7 +92,7 @@ HepburnKatakana::HepburnKatakana()
 }
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::Romaji const & r )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
   
diff --git a/romaji.hh b/romaji.hh
index aaaff18..581435d 100644
--- a/romaji.hh
+++ b/romaji.hh
@@ -13,7 +13,7 @@ namespace Romaji {
 using std::vector;
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::Romaji const & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/russiantranslit.cc b/russiantranslit.cc
index 9b68217..29787b1 100644
--- a/russiantranslit.cc
+++ b/russiantranslit.cc
@@ -99,7 +99,7 @@ RussianTable::RussianTable()
   ins( "Ya", "Я" );
 }
   
-sptr< Dictionary::Class > makeDictionary() throw( std::exception )
+sptr< Dictionary::Class > makeDictionary() THROW_SPEC( std::exception )
 {
   static RussianTable t;
 
diff --git a/russiantranslit.hh b/russiantranslit.hh
index ff05254..e5b889f 100644
--- a/russiantranslit.hh
+++ b/russiantranslit.hh
@@ -9,7 +9,7 @@
 // Support for Russian transliteration
 namespace RussianTranslit {
 
-sptr< Dictionary::Class > makeDictionary() throw( std::exception );
+sptr< Dictionary::Class > makeDictionary() THROW_SPEC( std::exception );
 
 }
 
diff --git a/sdict.cc b/sdict.cc
index 1eddf6c..ef03a9d 100644
--- a/sdict.cc
+++ b/sdict.cc
@@ -160,7 +160,7 @@ class SdictDictionary: public BtreeIndexing::BtreeDictionary
     virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                         vector< wstring > const & alts,
                                                         wstring const & )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual QString const & getDescription();
 
@@ -633,7 +633,7 @@ void SdictArticleRequest::run()
 sptr< Dictionary::DataRequest > SdictDictionary::getArticle( wstring const & word,
                                                              vector< wstring > const & alts,
                                                              wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new SdictArticleRequest( word, alts, *this );
 }
@@ -709,7 +709,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/sdict.hh b/sdict.hh
index b2cadd7..ef979c0 100644
--- a/sdict.hh
+++ b/sdict.hh
@@ -16,7 +16,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/slob.cc b/slob.cc
index b8ebb5f..deb7699 100644
--- a/slob.cc
+++ b/slob.cc
@@ -538,10 +538,10 @@ class SlobDictionary: public BtreeIndexing::BtreeDictionary
     virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                         vector< wstring > const & alts,
                                                         wstring const & )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual QString const& getDescription();
 
@@ -1281,7 +1281,7 @@ void SlobArticleRequest::run()
 sptr< Dictionary::DataRequest > SlobDictionary::getArticle( wstring const & word,
                                                             vector< wstring > const & alts,
                                                             wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new SlobArticleRequest( word, alts, *this );
 }
@@ -1427,7 +1427,7 @@ void SlobResourceRequest::run()
 }
 
 sptr< Dictionary::DataRequest > SlobDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new SlobResourceRequest( *this, name );
 }
@@ -1437,7 +1437,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/slob.hh b/slob.hh
index 9fdbde9..248ce9a 100644
--- a/slob.hh
+++ b/slob.hh
@@ -15,7 +15,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/sounddir.cc b/sounddir.cc
index 39ab768..1feed47 100644
--- a/sounddir.cc
+++ b/sounddir.cc
@@ -94,10 +94,10 @@ public:
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -126,7 +126,7 @@ SoundDirDictionary::SoundDirDictionary( string const & id,
 sptr< Dictionary::DataRequest > SoundDirDictionary::getArticle( wstring const & word,
                                                                 vector< wstring > const & alts,
                                                                 wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< WordArticleLink > chain = findArticles( word );
 
@@ -300,7 +300,7 @@ void SoundDirDictionary::loadIcon() throw()
 }
 
 sptr< Dictionary::DataRequest > SoundDirDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   bool isNumber = false;
 
@@ -402,7 +402,7 @@ void addDir( QDir const & baseDir, QDir const & dir, IndexedWords & indexedWords
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::SoundDirs const & soundDirs,
                                                       string const & indicesDir,
                                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/sounddir.hh b/sounddir.hh
index 738085d..1b11cd1 100644
--- a/sounddir.hh
+++ b/sounddir.hh
@@ -16,7 +16,7 @@ using std::string;
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::SoundDirs const &,
                                                       string const & indicesDir,
                                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/stardict.cc b/stardict.cc
index afb8666..47ba1e9 100644
--- a/stardict.cc
+++ b/stardict.cc
@@ -166,15 +166,15 @@ public:
   { return idxHeader.langTo; }
 
   virtual sptr< Dictionary::WordSearchRequest > findHeadwordsForSynonym( wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual QString const& getDescription();
 
@@ -1104,7 +1104,7 @@ void StardictHeadwordsRequest::run()
 
 sptr< Dictionary::WordSearchRequest >
   StardictDictionary::findHeadwordsForSynonym( wstring const & word )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new StardictHeadwordsRequest( word, *this );
 }
@@ -1305,7 +1305,7 @@ void StardictArticleRequest::run()
 sptr< Dictionary::DataRequest > StardictDictionary::getArticle( wstring const & word,
                                                                 vector< wstring > const & alts,
                                                                 wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new StardictArticleRequest( word, alts, *this );
 }
@@ -1594,7 +1594,7 @@ void StardictResourceRequest::run()
 }
 
 sptr< Dictionary::DataRequest > StardictDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new StardictResourceRequest( *this, name );
 }
@@ -1773,7 +1773,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/stardict.hh b/stardict.hh
index 052c8d8..9d85c6d 100644
--- a/stardict.hh
+++ b/stardict.hh
@@ -16,7 +16,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/transliteration.cc b/transliteration.cc
index 55d562b..c51d37a 100644
--- a/transliteration.cc
+++ b/transliteration.cc
@@ -35,17 +35,17 @@ unsigned long BaseTransliterationDictionary::getWordCount() throw()
 { return 0; }
 
 sptr< Dictionary::WordSearchRequest > BaseTransliterationDictionary::prefixMatch( wstring const &,
-                                                                                  unsigned long ) throw( std::exception )
+                                                                                  unsigned long ) THROW_SPEC( std::exception )
 { return new Dictionary::WordSearchRequestInstant(); }
 
 sptr< Dictionary::DataRequest > BaseTransliterationDictionary::getArticle( wstring const &,
                                                                            vector< wstring > const &,
                                                                            wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 { return new Dictionary::DataRequestInstant( false ); }
 
 sptr< Dictionary::WordSearchRequest > BaseTransliterationDictionary::findHeadwordsForSynonym( wstring const & str )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   sptr< Dictionary::WordSearchRequestInstant > result = new Dictionary::WordSearchRequestInstant();
 
diff --git a/transliteration.hh b/transliteration.hh
index 8c1c1d0..060529c 100644
--- a/transliteration.hh
+++ b/transliteration.hh
@@ -40,15 +40,15 @@ public:
     throw() = 0;
 
   virtual sptr< Dictionary::WordSearchRequest > findHeadwordsForSynonym( wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::WordSearchRequest > prefixMatch( wstring const &,
-                                                             unsigned long ) throw( std::exception );
+                                                             unsigned long ) THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const &,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 };
 
 
diff --git a/utf8.cc b/utf8.cc
index 02db092..f8ea8f4 100644
--- a/utf8.cc
+++ b/utf8.cc
@@ -139,7 +139,7 @@ string encode( wstring const & in ) throw()
                  encode( in.data(), in.size(), &buffer.front() ) );
 }
 
-wstring decode( string const & in ) throw( exCantDecode )
+wstring decode( string const & in ) THROW_SPEC( exCantDecode )
 {
   
   if ( in.size() == 0 )
diff --git a/utf8.hh b/utf8.hh
index a48d9c6..abd86a2 100644
--- a/utf8.hh
+++ b/utf8.hh
@@ -3,6 +3,7 @@
 
 #include <cstdio>
 #include <string>
+#include "cpp_features.hh"
 #include "ex.hh"
 #include "wstring.hh"
 
@@ -32,7 +33,7 @@ long decode( char const * in, size_t inSize, wchar * out );
 
 /// Versions for non time-critical code.
 string encode( wstring const & ) throw();
-wstring decode( string const & ) throw( exCantDecode );
+wstring decode( string const & ) THROW_SPEC( exCantDecode );
 
 /// Since the standard isspace() is locale-specific, we need something
 /// that would never mess up our utf8 input. The stock one worked fine under
diff --git a/voiceengines.cc b/voiceengines.cc
index 33ff4ee..7366c9a 100644
--- a/voiceengines.cc
+++ b/voiceengines.cc
@@ -58,12 +58,12 @@ public:
 
   virtual sptr< WordSearchRequest > prefixMatch( wstring const & word,
                                                  unsigned long maxResults )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< DataRequest > getArticle( wstring const &,
                                           vector< wstring > const & alts,
                                           wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -72,7 +72,7 @@ protected:
 
 sptr< WordSearchRequest > VoiceEnginesDictionary::prefixMatch( wstring const & /*word*/,
                                                                unsigned long /*maxResults*/ )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   WordSearchRequestInstant * sr = new WordSearchRequestInstant();
   sr->setUncertain( true );
@@ -81,7 +81,7 @@ sptr< WordSearchRequest > VoiceEnginesDictionary::prefixMatch( wstring const & /
 
 sptr< Dictionary::DataRequest > VoiceEnginesDictionary::getArticle(
   wstring const & word, vector< wstring > const &, wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   string result;
   string wordUtf8( Utf8::encode( word ) );
@@ -128,7 +128,7 @@ void VoiceEnginesDictionary::loadIcon() throw()
 
 vector< sptr< Dictionary::Class > > makeDictionaries(
   Config::VoiceEngines const & voiceEngines )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
 
diff --git a/voiceengines.hh b/voiceengines.hh
index 8c52cc8..85dadb3 100644
--- a/voiceengines.hh
+++ b/voiceengines.hh
@@ -18,7 +18,7 @@ using std::string;
 using gd::wstring;
 
 vector< sptr< Dictionary::Class > > makeDictionaries(Config::VoiceEngines const & voiceEngines)
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/website.cc b/website.cc
index 6c5a355..2990a7a 100644
--- a/website.cc
+++ b/website.cc
@@ -47,12 +47,12 @@ public:
   { return 0; }
 
   virtual sptr< WordSearchRequest > prefixMatch( wstring const & word,
-                                                 unsigned long ) throw( std::exception );
+                                                 unsigned long ) THROW_SPEC( std::exception );
 
   virtual sptr< DataRequest > getArticle( wstring const &,
                                           vector< wstring > const & alts,
                                           wstring const & context )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -60,7 +60,7 @@ protected:
 };
 
 sptr< WordSearchRequest > WebSiteDictionary::prefixMatch( wstring const & /*word*/,
-                                                          unsigned long ) throw( std::exception )
+                                                          unsigned long ) THROW_SPEC( std::exception )
 {
   sptr< WordSearchRequestInstant > sr = new WordSearchRequestInstant;
 
@@ -72,7 +72,7 @@ sptr< WordSearchRequest > WebSiteDictionary::prefixMatch( wstring const & /*word
 sptr< DataRequest > WebSiteDictionary::getArticle( wstring const & str,
                                                    vector< wstring > const &,
                                                    wstring const & context )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   sptr< DataRequestInstant > dr = new DataRequestInstant( true );
 
@@ -159,7 +159,7 @@ void WebSiteDictionary::loadIcon() throw()
 }
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::WebSites const & ws )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > result;
 
diff --git a/website.hh b/website.hh
index dd5bf37..f2699c2 100644
--- a/website.hh
+++ b/website.hh
@@ -14,7 +14,7 @@ using std::vector;
 using std::string;
 
 vector< sptr< Dictionary::Class > > makeDictionaries( Config::WebSites const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 }
 
diff --git a/xdxf.cc b/xdxf.cc
index 4672de9..7addcdb 100644
--- a/xdxf.cc
+++ b/xdxf.cc
@@ -166,10 +166,10 @@ public:
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual QString const& getDescription();
 
@@ -608,7 +608,7 @@ void XdxfArticleRequest::run()
 sptr< Dictionary::DataRequest > XdxfDictionary::getArticle( wstring const & word,
                                                             vector< wstring > const & alts,
                                                             wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new XdxfArticleRequest( word, alts, *this );
 }
@@ -672,7 +672,7 @@ class GzippedFile: public QIODevice
 
 public:
 
-  GzippedFile( char const * fileName ) throw( exCantReadFile );
+  GzippedFile( char const * fileName ) THROW_SPEC( exCantReadFile );
 
   ~GzippedFile();
 
@@ -703,7 +703,7 @@ protected:
   { return -1; }
 };
 
-GzippedFile::GzippedFile( char const * fileName ) throw( exCantReadFile )
+GzippedFile::GzippedFile( char const * fileName ) THROW_SPEC( exCantReadFile )
 {
   gz = gd_gzopen( fileName );
   if ( !gz )
@@ -1099,7 +1099,7 @@ void XdxfResourceRequest::run()
 }
 
 sptr< Dictionary::DataRequest > XdxfDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new XdxfResourceRequest( *this, name );
 }
@@ -1111,7 +1111,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/xdxf.hh b/xdxf.hh
index f65a44b..880b2b5 100644
--- a/xdxf.hh
+++ b/xdxf.hh
@@ -16,7 +16,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 }
 
diff --git a/zim.cc b/zim.cc
index 5175f63..d2a60bb 100644
--- a/zim.cc
+++ b/zim.cc
@@ -464,10 +464,10 @@ class ZimDictionary: public BtreeIndexing::BtreeDictionary
     virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                         vector< wstring > const & alts,
                                                         wstring const & )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-      throw( std::exception );
+      THROW_SPEC( std::exception );
 
     virtual QString const& getDescription();
 
@@ -1131,7 +1131,7 @@ void ZimArticleRequest::run()
 sptr< Dictionary::DataRequest > ZimDictionary::getArticle( wstring const & word,
                                                            vector< wstring > const & alts,
                                                            wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new ZimArticleRequest( word, alts, *this );
 }
@@ -1277,7 +1277,7 @@ void ZimResourceRequest::run()
 }
 
 sptr< Dictionary::DataRequest > ZimDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   return new ZimResourceRequest( *this, name );
 }
@@ -1288,7 +1288,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< sptr< Dictionary::Class > > dictionaries;
 
diff --git a/zim.hh b/zim.hh
index 2717cd0..960e606 100644
--- a/zim.hh
+++ b/zim.hh
@@ -15,7 +15,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
diff --git a/zipsounds.cc b/zipsounds.cc
index 2cc5113..7da75bb 100644
--- a/zipsounds.cc
+++ b/zipsounds.cc
@@ -128,10 +128,10 @@ public:
   virtual sptr< Dictionary::DataRequest > getArticle( wstring const &,
                                                       vector< wstring > const & alts,
                                                       wstring const & )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
   virtual sptr< Dictionary::DataRequest > getResource( string const & name )
-    throw( std::exception );
+    THROW_SPEC( std::exception );
 
 protected:
 
@@ -176,7 +176,7 @@ string ZipSoundsDictionary::getName() throw()
 sptr< Dictionary::DataRequest > ZipSoundsDictionary::getArticle( wstring const & word,
                                                                  vector< wstring > const & alts,
                                                                  wstring const & )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   vector< WordArticleLink > chain = findArticles( word );
 
@@ -337,7 +337,7 @@ sptr< Dictionary::DataRequest > ZipSoundsDictionary::getArticle( wstring const &
 }
 
 sptr< Dictionary::DataRequest > ZipSoundsDictionary::getResource( string const & name )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   // Remove extension for sound files (like in sound dirs)
 
@@ -404,7 +404,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & initializing )
-  throw( std::exception )
+  THROW_SPEC( std::exception )
 {
   (void) initializing;
   vector< sptr< Dictionary::Class > > dictionaries;
diff --git a/zipsounds.hh b/zipsounds.hh
index e407ca7..bb392a6 100644
--- a/zipsounds.hh
+++ b/zipsounds.hh
@@ -15,7 +15,7 @@ vector< sptr< Dictionary::Class > > makeDictionaries(
                                       vector< string > const & fileNames,
                                       string const & indicesDir,
                                       Dictionary::Initializing & )
-  throw( std::exception );
+  THROW_SPEC( std::exception );
 
 }
 
-- 
2.34.1


