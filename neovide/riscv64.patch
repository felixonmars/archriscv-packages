--- PKGBUILD
+++ PKGBUILD
@@ -15,23 +15,31 @@ depends=(fontconfig
          libfreetype.so
          libglvnd
          neovim
-         sndio)
+         sndio
+         libz.so
+         libexpat.so
+         libpng16.so
+         libjpeg.so)
 makedepends=(cargo
-             cmake)
+             cmake
+             python
+             git
+             gn
+             ninja
+             clang)
 optdepends=('vulkan-intel: vulkan support for intel')
 optdepends=('libxkbcommon-x11: run on X11 (not needed for wayland)')
 _archive=("$pkgname-$pkgver")
 source=("$url/archive/$pkgver/$_archive.tar.gz")
 sha256sums=('62e973a5407a6bfc731ce78e0495d2ed10930d33b22fe94cfe23acccbf789ae9')
+options=(!lto)
 
 prepare() {
 	cd "$_archive"
-	sed -r -i \
-		-e '/^incremental/a opt-level = 3' \
-		-e '/wayland/s/\]/, "embed-icudtl"]/g' \
-		-e '/wayland/a no-default-features = true' \
-		Cargo.toml
-	cargo fetch --locked --target "$CARCH-unknown-linux-gnu"
+	sed -i -e '/^incremental/a opt-level = 3' Cargo.toml
+	echo -e "\n[patch.crates-io]\nskia-bindings = { git = 'https://github.com/hack3ric/rust-skia', branch = 'archrv-0.62.0' }\nring = { git = 'https://github.com/felixonmars/ring', branch = '0.16.20' }" >> Cargo.toml
+	cargo update -p skia-bindings -p ring
+	cargo fetch --locked
 }
 
 build() {
@@ -42,6 +50,9 @@ build() {
 	export CXXFLAGS="${CXXFLAGS/_FORTIFY_SOURCE=3/_FORTIFY_SOURCE=2}"
 	CFLAGS+=' -ffat-lto-objects'
 	export SKIA_USE_SYSTEM_LIBRARIES=true
+	export FORCE_SKIA_BUILD=true
+	export SKIA_GN_COMMAND=gn
+	export SKIA_NINJA_COMMAND=ninja
 	cargo build --frozen --release --features embed-fonts
 }
 
