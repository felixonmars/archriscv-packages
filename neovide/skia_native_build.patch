diff --git a/skia-bindings/build_support/binary_cache/download.rs b/skia-bindings/build_support/binary_cache/download.rs
index 87def5a4..a8dff27e 100644
--- a/skia-bindings/build_support/binary_cache/download.rs
+++ b/skia-bindings/build_support/binary_cache/download.rs
@@ -13,6 +13,7 @@ use std::{
 /// submodules, or when `build.rs` was invoked outside of the git repository by downloading and
 /// unpacking them from GitHub.
 pub fn resolve_dependencies() {
+    return; // manually do this in PKGBUILD
     if cargo::is_crate() {
         // In a crate.
         download_dependencies();
diff --git a/skia-bindings/build_support/skia/config.rs b/skia-bindings/build_support/skia/config.rs
index 504905e4..f5600a7d 100644
--- a/skia-bindings/build_support/skia/config.rs
+++ b/skia-bindings/build_support/skia/config.rs
@@ -53,7 +53,7 @@ impl BuildConfiguration {
         // It's possible that the provided command line for the compiler already includes --target.
         // We assume that it's most specific/appropriate, extract and use is. It might for example include
         // a vendor infix, while cargo targets usually don't.
-        let target = cc
+        let mut target = cc
             .find("--target=")
             .map(|target_option_offset| {
                 let target_tail = &cc[(target_option_offset + "--target=".len())..];
@@ -64,6 +64,10 @@ impl BuildConfiguration {
             })
             .unwrap_or_else(cargo::target);
 
+        if target.to_string() == "riscv64gc-unknown-linux-gnu" {
+            target = cargo::parse_target("riscv64-unknown-linux-gnu");
+        }
+
         BuildConfiguration {
             on_windows: cargo::host().is_windows(),
             // `OPT_LEVEL` is set by Cargo itself.
Submodule skia-bindings/skia contains modified content
diff --git a/skia-bindings/skia/bin/fetch-gn b/skia-bindings/skia/bin/fetch-gn
index 0c251d8128..e7d5387d8d 100755
--- a/skia-bindings/skia/bin/fetch-gn
+++ b/skia-bindings/skia/bin/fetch-gn
@@ -20,22 +20,11 @@ else:
 
 os.chdir(os.path.join(os.path.dirname(__file__), os.pardir))
 
-gnzip = os.path.join(tempfile.mkdtemp(), 'gn.zip')
-with open(gnzip, 'wb') as f:
-  OS  = {'darwin': 'mac', 'linux': 'linux', 'linux2': 'linux', 'win32': 'windows', 'msys': 'windows'}[sys.platform]
-  cpu = {'aarch64': 'arm64', 'amd64': 'amd64', 'arm64': 'arm64', 'x86_64': 'amd64'}[platform.machine().lower()]
-
-  rev = 'fe330c0ae1ec29db30b6f830e50771a335e071fb'
-  url = 'https://chrome-infra-packages.appspot.com/dl/gn/gn/{}-{}/+/git_revision:{}'.format(
-          OS,cpu,rev)
-  f.write(urlopen(url).read())
-
 gn = 'gn.exe' if 'win32' in sys.platform or 'msys' in sys.platform else 'gn'
-with zipfile.ZipFile(gnzip, 'r') as f:
-  f.extract(gn, 'bin')
-
 gn = os.path.join('bin', gn)
 
+shutil.copy('/usr/bin/gn', gn) # use system gn
+
 os.chmod(gn, stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR |
              stat.S_IRGRP                | stat.S_IXGRP |
              stat.S_IROTH                | stat.S_IXOTH )
