--- PKGBUILD
+++ PKGBUILD
@@ -20,7 +20,6 @@ url='https://gcc.gnu.org'
 makedepends=(
   binutils
   doxygen
-  gcc-ada
   gcc-d
   git
   libisl
@@ -39,6 +38,8 @@ options=(!emptydirs !lto)
 _libdir=usr/lib/gcc/$CHOST/${pkgver%%+*}
 source=(git+https://sourceware.org/git/gcc.git#commit=${_commit}
         c89 c99
+        libitm-riscv64.patch
+        unfilter-default-library-path.patch
 )
 validpgpkeys=(F3691687D867B81B51CE07D9BBE43771487328A9  # bpiotrowski@archlinux.org
               86CFFCA918CF3AF47147588051E8B148A9999C34  # evangelos@foutrelis.com
@@ -46,7 +47,9 @@ validpgpkeys=(F3691687D867B81B51CE07D9BBE43771487328A9  # bpiotrowski@archlinux.
               D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62) # Jakub Jelinek <jakub@redhat.com>
 sha256sums=('SKIP'
             'de48736f6e4153f03d0a5d38ceb6c6fdb7f054e8f47ddd6af0a3dbf14f27b931'
-            '2513c6d9984dd0a2058557bf00f06d8d5181734e41dcfe07be7ed86f2959622a')
+            '2513c6d9984dd0a2058557bf00f06d8d5181734e41dcfe07be7ed86f2959622a'
+            '8a71bbb41463fb0e8518d5cff671097704fb8b01867ea224b8ebfe6ba3e4f6d6'
+            '7183fdeea8fd148cf9dd03b0932f9d439b818a5ab3bc9a5e20d8e0b41c9e0efd')
 
 prepare() {
   [[ ! -d gcc ]] && ln -s gcc-${pkgver/+/-} gcc
@@ -58,6 +61,12 @@ prepare() {
   # Arch Linux installs x86_64 libraries /lib
   sed -i '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64
 
+  # libitm riscv
+  patch -Np1 < ../libitm-riscv64.patch
+
+  # Remove codes filtering default library paths to make mold work correctly
+  patch -Np1 < ../unfilter-default-library-path.patch
+
   mkdir -p "$srcdir/gcc-build"
 }
 
@@ -117,6 +126,10 @@ build() {
 
   # make documentation
   make -O -C $CHOST/libstdc++-v3/doc doc-man-doxygen
+
+  # Patch spec strings embedded in binaries
+  sed -i 's/%{pthread:--push-state --as-needed -latomic --pop-state}/  --push-state --as-needed -latomic --pop-state         /' gcc/xgcc
+  sed -i 's/%{pthread:--push-state --as-needed -latomic --pop-state}/  --push-state --as-needed -latomic --pop-state         /' gcc/xg++
 }
 
 check() {
@@ -130,12 +143,10 @@ check() {
 package_gcc12-libs() {
   pkgdesc='Runtime libraries shipped by GCC (12.x.x)'
   depends=('glibc>=2.27')
-  options=(!emptydirs !strip)
+  options=(!emptydirs !strip staticlibs)
 
   cd gcc-build
   make -C $CHOST/libgcc DESTDIR="$pkgdir" install-shared
-  mv "${pkgdir}/${_libdir}"/../lib/* "${pkgdir}/${_libdir}"
-  rmdir "${pkgdir}/${_libdir}"/../lib
   rm -f "$pkgdir/$_libdir/libgcc_eh.a"
 
   for lib in libasan.so \
@@ -146,7 +157,6 @@ package_gcc12-libs() {
              liblsan.so \
              libquadmath.so \
              libstdc++.so \
-             libtsan.so \
              libubsan.so; do
     ln -s /usr/lib/$lib "$pkgdir/$_libdir/$lib"
   done
@@ -160,6 +170,9 @@ package_gcc12-libs() {
   install -Dm644 "$srcdir/gcc/COPYING.RUNTIME" \
     "$pkgdir/usr/share/licenses/gcc12-libs/RUNTIME.LIBRARY.EXCEPTION"
 
+  # Remove static library (.a) files except libatomic.a
+  find "$pkgdir" -name '*.a' ! -name libatomic.a -delete
+
   # remove conflicting files
   rm -rf "${pkgdir}"/usr/share/locale
 }
@@ -177,7 +190,8 @@ package_gcc12() {
   install -m755 -t "$pkgdir/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1,gcov{,-tool}}
 
   make -C $CHOST/libgcc DESTDIR="$pkgdir" install
-  rm -f "$pkgdir"/usr/lib/libgcc_s.so*
+  rm -rf "$pkgdir/${_libdir}"/../lib
+  rm -f "$pkgdir/${_libdir}"/libgcc_s.so*
 
   make -C $CHOST/libstdc++-v3/src DESTDIR="$pkgdir" install
   make -C $CHOST/libstdc++-v3/include DESTDIR="$pkgdir" install
@@ -198,7 +212,6 @@ package_gcc12() {
   make -C $CHOST/libquadmath DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS
   make -C $CHOST/libsanitizer DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
   make -C $CHOST/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
-  make -C $CHOST/libsanitizer/tsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
   make -C $CHOST/libsanitizer/lsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
 
   make -C libcpp DESTDIR="$pkgdir" install
@@ -208,9 +221,9 @@ package_gcc12() {
   ln -s gcc "$pkgdir"/usr/bin/cc-12
 
   # create cc-rs compatible symlinks
-  # https://github.com/rust-lang/cc-rs/blob/1.0.73/src/lib.rs#L2578-L2581
+  # https://github.com/rust-lang/cc-rs/blob/1.0.73/src/lib.rs#L2624
   for binary in {c++,g++,gcc,gcc-ar,gcc-nm,gcc-ranlib}; do
-    ln -s /usr/bin/${binary} "${pkgdir}"/usr/bin/x86_64-linux-gnu-${binary}-12
+    ln -s /usr/bin/${binary} "${pkgdir}"/usr/bin/riscv64-linux-gnu-${binary}-12
   done
 
   # POSIX conformance launcher scripts for c89 and c99
