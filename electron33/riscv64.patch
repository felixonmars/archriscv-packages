--- PKGBUILD
+++ PKGBUILD
@@ -30,8 +30,10 @@ makedepends=(clang
              git
              gn
              gperf
+             go
              # harfbuzz-icu # disabled because ICU 76 not supported yet
              java-runtime-headless
+             jq
              libnotify
              libva
              lld
@@ -62,7 +64,7 @@ optdepends=('kde-cli-tools: file deletion support (kioclient5)'
             'trash-cli: file deletion support (trash-put)'
             'xdg-utils: open URLs with desktopâ€™s default (xdg-email, xdg-open)')
 options=('!lto') # Electron adds its own flags for ThinLTO
-source=("git+https://github.com/electron/electron.git#tag=v$pkgver"
+source=("git+https://github.com/riscv-forks/electron.git#branch=v$pkgver-riscv"
         https://gitlab.com/Matt.Jolly/chromium-patches/-/archive/$_gcc_patches/chromium-patches-$_gcc_patches.tar.bz2
         # Chromium
         add-more-CFI-suppressions-for-inline-PipeWire-functions.patch
@@ -75,6 +77,7 @@ source=("git+https://github.com/electron/electron.git#tag=v$pkgver"
         electron.desktop
         jinja-python-3.10.patch
         use-system-libraries-in-node.patch
+        Debian-fix-rust-linking.patch
         makepkg-source-roller.py
         # BEGIN managed sources
         chromium-mirror::git+https://github.com/chromium/chromium.git#tag=130.0.6723.191
@@ -241,10 +244,10 @@ source=("git+https://github.com/electron/electron.git#tag=v$pkgver"
         chromium-mirror_third_party_openscreen_src_third_party_tinycbor_src::git+https://chromium.googlesource.com/external/github.com/intel/tinycbor.git#commit=d393c16f3eb30d0c47e6f9d92db62272f0ec4dc7
         # END managed sources
         )
-sha256sums=('1186647175bd6173c46d6baf610910c66f76465b2769725aa3d5ba32bf6c039e'
+sha256sums=('52f0f3bf42f15a813b76de9120b6f7d9ea819e5a09211667bd9ffdd0b467bc34'
             'c966110d60dbefe048c2cd854e847ff3cae0a66e474d68535fec23947d292a20'
             'd3dd9b4132c9748b824f3dcf730ec998c0087438db902bc358b3c391658bebf5'
-            'b3de01b7df227478687d7517f61a777450dca765756002c80c4915f271e2d961'
+            '8e128dec0d9416029ea8124e14963c9e0caf897bf60d347a070e393edebdff1c'
             'a4a822e135b253c93089a80c679842cc470c6936742767ae09d952646889abd6'
             '74a2d428f7f09132c4a923e816a5a9333803f842003d650cd4a95a35e5457253'
             'dd2d248831dd4944d385ebf008426e66efe61d6fdf66f8932c963a12167947b4'
@@ -252,6 +255,7 @@ sha256sums=('1186647175bd6173c46d6baf610910c66f76465b2769725aa3d5ba32bf6c039e'
             '4484200d90b76830b69eea3a471c103999a3ce86bb2c29e6c14c945bf4102bae'
             '55dbe71dbc1f3ab60bf1fa79f7aea7ef1fe76436b1d7df48728a1f8227d2134e'
             'ff588a8a4fd2f79eb8a4f11cf1aa151298ffb895be566c57cc355d47f161f53f'
+            '3eb5e621757be3f2984acb76d16cf3571bfe5bbbc71ad230b21aa983041ff5ea'
             'c75dbcb394a56065909e0bc4480e0d60461369403797945de0ec11da20b7780a'
             'add3d20ad7f8014d3a34cb229f7f5fefcea485afd381c34361f71d521c210641'
             '0b7a546ee6913c49519c10c293ac530ff381641a8a465fa2e184d6dbe0fb784d'
@@ -462,12 +466,22 @@ prepare() {
   cp -r chromium-mirror_third_party_depot_tools depot_tools
   export PATH+=":$PWD/depot_tools" DEPOT_TOOLS_UPDATE=0
   #export VPYTHON_BYPASS='manually managed python not supported by chrome operations'
+  # Use a known commit that supports riscv64
+  git -C depot_tools checkout --detach 2a18f6d3245450d8c96c843a6584aaea561ef873
+  # Python 3.12 breaks gsutils
+  # Bundled wheels are not available for riscv64
+  sed -i '/wheel: </,$d' depot_tools/.vpython3
+  sed -i '/wheel: </,$d' depot_tools/gsutil.vpython3
+  # Manually install required wheels
+  vpython3 -m pip install httplib2==0.13.1 six==1.10.0 requests==2.31.0
 
   echo "Putting together electron sources"
   # Generate gclient gn args file and prepare-electron-source-tree.sh
   python makepkg-source-roller.py generate electron/DEPS $pkgname
+  sed -i '/esbuild/d' prepare-electron-source-tree.sh
   rbash prepare-electron-source-tree.sh "$CARCH"
   mv electron src/electron
+  GOBIN=$(realpath src/third_party/devtools-frontend/src/third_party/esbuild/) go install "github.com/evanw/esbuild/cmd/esbuild@v0.14.13"
 
   echo "Running hooks..."
   # depot_tools/gclient.py runhooks
@@ -479,9 +493,15 @@ prepare() {
     -s src/third_party/skia --header src/skia/ext/skia_commit_hash.h
   src/build/util/lastchange.py \
     -s src/third_party/dawn --revision src/gpu/webgpu/DAWN_VERSION
-  src/tools/update_pgo_profiles.py --target=linux update \
-    --gs-url-base=chromium-optimization-profiles/pgo_profiles
-
+  #src/tools/update_pgo_profiles.py --target=linux update \
+  #  --gs-url-base=chromium-optimization-profiles/pgo_profiles
+
+  pushd src/third_party/node/
+  sed -i -e 's/@rollup/rollup/' -e "s/'wasm-node',//" node_modules.py
+  local _rollup_ver="$(jq -r .dependencies.\"@rollup/wasm-node\" package.json)"
+  jq ".dependencies.rollup=\"$_rollup_ver\"" package.json > package.json.new
+  mv package.json{.new,}
+  popd
   # https://gitlab.archlinux.org/archlinux/packaging/packages/electron32/-/issues/1
   src/third_party/node/update_npm_deps
 
@@ -507,6 +527,8 @@ prepare() {
 
   patch -Np0 -i ../blink-fix-missing-stdlib-include.patch
 
+  patch -Np0 -i ../Debian-fix-rust-linking.patch
+
   ## Upstream fixes
   patch -Np1 -d third_party/webrtc <../webrtc-fix-build-with-pipewire-1.4.patch
   patch -Np1 -i ../add-more-CFI-suppressions-for-inline-PipeWire-functions.patch
@@ -582,6 +604,8 @@ build() {
     'enable_hangout_services_extension=true'
     'enable_widevine=false'
     'enable_nacl=false'
+    'is_clang=true'
+    "override_electron_version=\"$pkgver\""
   )
 
   if [[ -n ${_system_libs[icu]+set} ]]; then
@@ -595,7 +619,7 @@ build() {
     'clang_base_path="/usr"'
     'clang_use_chrome_plugins=false'
     "clang_version=\"$_clang_version\""
-    'chrome_pgo_phase=2'
+    'chrome_pgo_phase=0'
   )
 
   # Allow the use of nightly features with stable Rust compiler
@@ -617,6 +641,10 @@ build() {
   CFLAGS+='   -Wno-unknown-warning-option'
   CXXFLAGS+=' -Wno-unknown-warning-option'
 
+  # Remove flags that are causing weird bugs on riscv64
+  CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2}
+  CXXFLAGS=${CXXFLAGS/-Wp,-D_FORTIFY_SOURCE=2}
+
   # Let Chromium set its own symbol level
   CFLAGS=${CFLAGS/-g }
   CXXFLAGS=${CXXFLAGS/-g }
@@ -664,3 +692,5 @@ package() {
   install -Dm644 src/electron/default_app/icon.png \
           "${pkgdir}/usr/share/pixmaps/${pkgname}.png"  # hicolor has no 1024x1024
 }
+
+sha256sums[0]=SKIP
diff --git compiler-rt-adjust-paths.patch compiler-rt-adjust-paths.patch
index 0469220..8ee7f55 100644
--- compiler-rt-adjust-paths.patch
+++ compiler-rt-adjust-paths.patch
@@ -1,8 +1,6 @@
-diff --git a/build/config/clang/BUILD.gn b/build/config/clang/BUILD.gn
-index d4de2e0cca0..57359c32121 100644
---- a/build/config/clang/BUILD.gn
-+++ b/build/config/clang/BUILD.gn
-@@ -130,12 +130,15 @@ template("clang_lib") {
+--- a/build/config/clang/BUILD.gn	2024-03-09 04:32:07.577338262 +0100
++++ b/build/config/clang/BUILD.gn	2024-03-09 04:55:29.376410067 +0100
+@@ -124,14 +124,18 @@
        } else if (is_linux || is_chromeos) {
          if (current_cpu == "x64") {
            _dir = "x86_64-unknown-linux-gnu"
@@ -15,10 +13,13 @@ index d4de2e0cca0..57359c32121 100644
          } else if (current_cpu == "arm64") {
            _dir = "aarch64-unknown-linux-gnu"
 +          _suffix = "-aarch64"
+         } else if (current_cpu == "riscv64") {
+           _dir = "riscv64-unknown-linux-gnu"
++          _suffix = "-riscv64"
          } else {
            assert(false)  # Unhandled cpu type
          }
-@@ -166,6 +169,11 @@ template("clang_lib") {
+@@ -162,6 +166,11 @@
          assert(false)  # Unhandled target platform
        }
  
