--- PKGBUILD
+++ PKGBUILD
@@ -32,8 +32,9 @@ depends=('c-ares' 'gtk3' 'libevent' 'nss' 'libffi')
 # shellcheck disable=SC2034
 makedepends=('clang' 'git' 'gn' 'gperf' 'harfbuzz-icu' 'http-parser'
              'qt5-base' 'java-runtime-headless' 'libnotify' 'lld' 'llvm'
-             'ninja' 'npm' 'pciutils' 'pipewire' 'python' 'python-httplib2'
-             'python-requests' 'python-pyparsing' 'python-six' 'wget' 'yarn')
+             'ninja' 'nodejs-lts-iron' 'npm' 'pciutils' 'pipewire' 'python' 'python-httplib2'
+             'python-requests' 'python-pyparsing' 'python-six' 'wget' 'yarn'
+             'go' 'p7zip' 'jdk17-openjdk')
 # shellcheck disable=SC2034
 optdepends=('kde-cli-tools: file deletion support (kioclient5)'
             'pipewire: WebRTC desktop sharing under Wayland'
@@ -78,6 +79,19 @@ source=("git+https://github.com/electron/electron.git#tag=v$pkgver"
         'more-fixes-for-gcc13.patch'
         'libxml2-2.12.patch'
         'icu-74.patch'
+        'REVERT-problematic-signal-handling-workaround.patch'
+        "$pkgname-support-riscv64-in-electron_runtime_api_delegate.cc.patch"
+        "$pkgname-extensions-common-api-runtime.json-support-riscv64.patch"
+        "$pkgname-riscv-angle.patch"
+        "$pkgname-riscv-sandbox.patch"
+        "$pkgname-riscv-crashpad.patch"
+        "$pkgname-riscv-dav1d.patch"
+        "$pkgname-riscv-base.patch"
+        "$pkgname-swiftshader-use-system-llvm.patch"
+        "$pkgname-swiftshader-LLVMJIT-AddressSanitizerPass-dead-code-remove.patch"
+        "$pkgname-gclient-ignore-prebuilt-platform-specific-deps.patch"
+        "$pkgname-deps-parser.py"
+        "$pkgname-partition_alloc.gni-add-missing-riscv64-definition.patch"
        )
 # shellcheck disable=SC2034
 sha256sums=('SKIP'
@@ -108,7 +122,20 @@ sha256sums=('SKIP'
             '3fb0636e9560760d99e7c9606b1c9b59eef9d91ed3419cc95b43302759f249be'
             '9d1f69f668e12fc14b4ccbcf88cb5a3acf666df06dafa8834f037bd8110ca17f'
             'bfae9e773edfd0ddbc617777fdd4c0609cba2b048be7afe40f97768e4eb6117e'
-            '547e092f6a20ebd15e486b31111145bc94b8709ec230da89c591963001378845')
+            '547e092f6a20ebd15e486b31111145bc94b8709ec230da89c591963001378845'
+            '87d2c69292ac55ea1784f812c30acdbc341d4333d790fab3439a6b60393bb6c9'
+            'b2bee22e96fceb794bfe16a670251959ee9ca7c87ed5048c9eb6cebd6e3b4bc3'
+            '840947515347933da383408711696150cf8020b35d7abe1265b87084dfe1f3df'
+            'a191ef5190e5f823e6be078df53ed1a888558673040985d79347a26644c39b63'
+            '1816d36eb6a17cd10ec310d2f81aac94b3fb27ad715e172e2c754e027dcf991d'
+            '85644fd6b1a64e7cf76f690f1427010cdf773938987f7e1a93b2977873707a4f'
+            '32811636eecd187dd386bbdd0fa1216728d6010f96fae8f1714dded04a95a5f4'
+            'aab631f5b6ea316b08bd290b52f60ed7715fceabd5c8de67535271fbbe2ae794'
+            'd901e905a9b4303e6334bf39475bcbcdf22959796954de66507857108d53570f'
+            'cf80c0d70f8933a4495c71d7be681c1457a69d26e95d2ad41da4bb02b7cbee4c'
+            'b28b64181c46549e94e8c26d5401b0036991c18c60040c444a262484addd0d0d'
+            '4b04b17c997b0f22b4d9ea1940809fbc29dea230c14643cf97a65a4e154bcb3a'
+            'a3c65ced08a4b8975036b7b5f17aba21352af785a278066049c8417a9d85fc10')
 
 # Possible replacements are listed in build/linux/unbundle/replace_gn_files.py
 # Keys are the names in the above script; values are the dependencies in Arch
@@ -166,17 +193,45 @@ solutions = [
 ]
 EOF
 
+  # Pin depot_tools
+  local _depot_tools_rev="$(python "$pkgname-deps-parser.py" depot_tools chromium-mirror/DEPS)"
+  git -C depot_tools checkout $_depot_tools_rev
+
   export PATH+=":$PWD/depot_tools" DEPOT_TOOLS_UPDATE=0
   export VPYTHON_BYPASS='manually managed python not supported by chrome operations'
 
   echo "Linking chromium from sources..."
   ln -s chromium-mirror src
 
+  echo "Building build tools that doesn't have prebuilt binaries for riscv64..."
+  export GOBIN="$HOME/bin"
+  export PATH="$PATH:$HOME/bin"
+
+  # Install the build tools
+  local infra_rev=$(python "$pkgname-deps-parser.py" infra src/DEPS)
+  curl "https://chromium.googlesource.com/infra/infra/+/$infra_rev/DEPS?format=text" | base64 -d > DEPS_infra
+  local luci_go_rev=$(python "$pkgname-deps-parser.py" luci_go DEPS_infra)
+  go install "go.chromium.org/luci/cipd/client/cmd/...@$luci_go_rev"
+
+  # Fix .cipd-bin problem
+  mkdir -p depot_tools/.cipd_bin
+  GOBIN=$(realpath depot_tools/.cipd_bin) go install "go.chromium.org/luci/auth/client/cmd/...@$luci_go_rev"
+
+  patch -Np0 -i $pkgname-gclient-ignore-prebuilt-platform-specific-deps.patch
+
   depot_tools/gclient.py sync -D \
       --nohooks \
       --with_branch_heads \
       --with_tags
 
+  # Install esbuild (version needs to be locked, not feasible to add it to make dependencies)
+  local esbuild_ver=$(python "$pkgname-deps-parser.py" esbuild src/DEPS)
+  GOBIN=$(realpath src/third_party/devtools-frontend/src/third_party/esbuild/) go install "github.com/evanw/esbuild/cmd/esbuild@v$esbuild_ver"
+
+  # Replace the bundled x86_64 JDK with system JDK17
+  rm -rf src/third_party/jdk/current
+  ln -s /usr/lib/jvm/java-17-openjdk src/third_party/jdk/current
+
   (
     cd src/electron || exit
     patch -Np1 -i ../../std-vector-non-const.patch
@@ -242,6 +297,23 @@ EOF
   # Fix build with ICU 74
   patch -Np1 -i ../icu-74.patch
 
+  # Chromium Bug fixes
+  patch -R -p1 -i "${srcdir}/REVERT-problematic-signal-handling-workaround.patch"
+
+  # RISC-V Patches
+  patch -Np1 -d third_party/crashpad/crashpad < "${srcdir}/$pkgname-riscv-crashpad.patch"
+  patch -Np1 -i ../$pkgname-riscv-angle.patch
+  patch -Np1 -i ../$pkgname-riscv-sandbox.patch
+  patch -Np1 -i ../$pkgname-riscv-dav1d.patch
+  patch -Np1 -i ../$pkgname-riscv-base.patch
+  patch -Np1 -d electron < ../$pkgname-support-riscv64-in-electron_runtime_api_delegate.cc.patch
+  patch -Np0 -i ../$pkgname-extensions-common-api-runtime.json-support-riscv64.patch
+  patch -Np1 -i ../$pkgname-partition_alloc.gni-add-missing-riscv64-definition.patch
+
+  # Build failes with the bundled LLVM 10.
+  patch -Np1 -i ../$pkgname-swiftshader-use-system-llvm.patch
+  patch -Np1 -i ../$pkgname-swiftshader-LLVMJIT-AddressSanitizerPass-dead-code-remove.patch
+
   # Allow building against system libraries in official builds
   echo "Patching Chromium for using system libraries..."
   sed -i 's/OFFICIAL_BUILD/GOOGLE_CHROME_BUILD/' \
@@ -273,11 +345,19 @@ build() {
   export AR=ar
   export NM=nm
 
+  # Disable RVV because the build of libyuv at this commit is broken on riscv.
+  CFLAGS+=' -D LIBYUV_DISABLE_RVV'
+  CXXFLAGS+=' -D LIBYUV_DISABLE_RVV'
+
   # Facilitate deterministic builds (taken from build/config/compiler/BUILD.gn)
   CFLAGS+='   -Wno-builtin-macro-redefined'
   CXXFLAGS+=' -Wno-builtin-macro-redefined'
   CPPFLAGS+=' -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__='
 
+  # Remove flags that are causing weird bugs on riscv64
+  CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2}
+  CXXFLAGS=${CXXFLAGS/-Wp,-D_FORTIFY_SOURCE=2}
+
   # Let Chromium set its own symbol level
   CFLAGS=${CFLAGS/-g }
   CXXFLAGS=${CXXFLAGS/-g }
@@ -307,7 +387,6 @@ build() {
     host_toolchain = "//build/toolchain/linux/unbundle:default"
     clang_base_path = "/usr"
     clang_use_chrome_plugins = false
-    symbol_level = 0 # sufficient for backtraces on x86(_64)
     chrome_pgo_phase = 0
     treat_warnings_as_errors = false
     disable_fieldtrial_testing_config = true
@@ -321,6 +400,7 @@ build() {
     use_system_libffi = true
     icu_use_data_file = false
     is_component_ffmpeg = false
+    symbol_level = 1
   '
   gn gen out/Release \
       --args="import(\"//electron/build/args/release.gn\") ${GN_EXTRA_ARGS}"
