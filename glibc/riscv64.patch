--- PKGBUILD
+++ PKGBUILD
@@ -37,21 +37,21 @@ pkgver() {
 }
 
 prepare() {
-  mkdir -p glibc-build lib32-glibc-build
+  mkdir -p glibc-build
 
   [[ -d glibc-$pkgver ]] && ln -s glibc-$pkgver glibc
   cd glibc
+  patch -Np1 -i ../mremap-fix-test.patch
 }
 
 build() {
   local _configure_flags=(
       --prefix=/usr
       --with-headers=/usr/include
-      --with-bugurl=https://gitlab.archlinux.org/archlinux/packaging/packages/glibc/-/issues
+      --with-bugurl=https://github.com/felixonmars/archriscv-packages/issues
       --enable-bind-now
       --enable-fortify-source
       --enable-kernel=4.4
-      --enable-multi-arch
       --enable-stack-protector=strong
       --enable-systemtap
       --disable-nscd
@@ -62,6 +62,12 @@ build() {
   # _FORTIFY_SOURCE=3 causes testsuite build failure and is unnecessary during
   # actual builds (support is built-in via --enable-fortify-source).
   CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=3/}
+  # check-localplt requires malloc family symbols to go through PLT.
+  # -fno-plt causes compiler generated memset calls in early code to use GOT,
+  # leading to segfault due to uninitialized GOT entry. Removing -fno-plt restores
+  # the old happy path of generating R_RISCV_CALL_PLT for such memset calls and
+  # then optimizing them away.
+  CFLAGS=${CFLAGS/-fno-plt/}
 
   (
     cd glibc-build
@@ -75,7 +81,6 @@ build() {
         --libdir=/usr/lib \
         --libexecdir=/usr/lib \
         --enable-cet \
-        --enable-sframe \
         "${_configure_flags[@]}"
 
     make -O
@@ -84,29 +89,6 @@ build() {
     make info
   )
 
-  (
-    cd lib32-glibc-build
-    export CC="gcc -m32 -mstackrealign"
-    export CXX="g++ -m32 -mstackrealign"
-
-    # remove frame pointer flags due to crashes of nvidia driver on steam starts
-    # See https://gitlab.archlinux.org/archlinux/packaging/packages/glibc/-/issues/10
-    CFLAGS=${CFLAGS/-fno-omit-frame-pointer -mno-omit-leaf-frame-pointer/}
-
-    echo "slibdir=/usr/lib32" >> configparms
-    echo "rtlddir=/usr/lib32" >> configparms
-    echo "sbindir=/usr/bin" >> configparms
-    echo "rootsbindir=/usr/bin" >> configparms
-
-    "${srcdir}"/glibc/configure \
-        --host=i686-pc-linux-gnu \
-        --libdir=/usr/lib32 \
-        --libexecdir=/usr/lib32 \
-        "${_configure_flags[@]}"
-
-    make -O
-  )
-
   # pregenerate locales here instead of in package
   # functions because localedef does not like fakeroot
   make -C "${srcdir}"/glibc/localedata objdir="${srcdir}"/glibc-build \
@@ -141,7 +123,7 @@ check() (
   _skip_test tst-shstk-legacy-1g     sysdeps/x86_64/Makefile
   _skip_test tst-adjtime             time/Makefile
 
-  make -O check
+  TIMEOUTFACTOR=20 make -O check
 )
 
 package_glibc() {
@@ -190,31 +172,6 @@ package_glibc() {
   install -Dm644 "${srcdir}"/sdt-config.h "${pkgdir}"/usr/include/sys/sdt-config.h
 }
 
-package_lib32-glibc() {
-  pkgdesc='GNU C Library (32-bit)'
-  depends=("glibc=$pkgver")
-  options+=('!emptydirs')
-  install=lib32-glibc.install
-
-  cd lib32-glibc-build
-
-  make DESTDIR="${pkgdir}" install
-  rm -rf "${pkgdir}"/{etc,sbin,usr/{bin,sbin,share},var}
-
-  # We need to keep 32 bit specific header files
-  find "${pkgdir}"/usr/include -type f -not -name '*-32.h' -delete
-
-  # Dynamic linker
-  install -d "${pkgdir}"/usr/lib
-  ln -s ../lib32/ld-linux.so.2 "${pkgdir}"/usr/lib/
-
-  # Add lib32 paths to the default library search path
-  install -Dm644 "${srcdir}"/lib32-glibc.conf "${pkgdir}"/etc/ld.so.conf.d/lib32-glibc.conf
-
-  # Symlink /usr/lib32/locale to /usr/lib/locale
-  ln -s ../lib/locale "${pkgdir}"/usr/lib32/locale
-}
-
 package_glibc-locales() {
   pkgdesc='Pregenerated locales for GNU C Library'
   depends=("glibc=$pkgver")
@@ -225,3 +182,8 @@ package_glibc-locales() {
   # deduplicate locale data
   hardlink -c "${pkgdir}"/usr/lib/locale
 }
+
+pkgname=(${pkgname[@]/lib32-glibc})
+makedepends=(${makedepends[@]/lib32-gcc-libs})
+source+=("mremap-fix-test.patch::https://inbox.sourceware.org/libc-alpha/20250208-fix-mremap-tst-v1-1-ad7ee617ec65@coelacanthus.name/raw")
+b2sums+=('3ba09c775c0d58bf9e5b08985ea5fa73509433df7ff284f035f7f73357e8f35a79c8e7f3a0fecfe4b8759831e9f0d38e8524dcf2b8132066a47cb7e234880a6e')
