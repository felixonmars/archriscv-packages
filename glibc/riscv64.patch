--- PKGBUILD
+++ PKGBUILD
@@ -7,14 +7,14 @@
 # NOTE: valgrind requires rebuilt with each major glibc version
 
 pkgbase=glibc
-pkgname=(glibc lib32-glibc)
+pkgname=(glibc)
 pkgver=2.36
 _commit=c804cd1c00adde061ca51711f63068c103e94eef
 pkgrel=1
 arch=(x86_64)
 url='https://www.gnu.org/software/libc'
 license=(GPL LGPL)
-makedepends=(git gd lib32-gcc-libs python)
+makedepends=(git gd python)
 options=(debug staticlibs !lto)
 source=(git+https://sourceware.org/git/glibc.git#commit=${_commit}
         locale.gen.txt
@@ -34,7 +34,7 @@ b2sums=('SKIP'
         'edef5f724f68ea95c6b0127bd13a10245f548afc381b2d0a6d1d06ee9f87b7dd89c6becd35d5ae722bf838594eb870a747f67f07f46e7d63f8c8d1a43cce4a52')
 
 prepare() {
-  mkdir -p glibc-build lib32-glibc-build
+  mkdir -p glibc-build
 
   [[ -d glibc-$pkgver ]] && ln -s glibc-$pkgver glibc
   cd glibc
@@ -54,12 +54,11 @@ build() {
       --enable-bind-now
       --enable-cet
       --enable-kernel=4.4
-      --enable-multi-arch
       --enable-stack-protector=strong
-      --enable-systemtap
       --disable-profile
       --disable-crypt
       --disable-werror
+      --disable-experimental-malloc
   )
 
   cd "$srcdir/glibc-build"
@@ -73,46 +72,13 @@ build() {
   # https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/glibc/PKGBUILD
   # remove fortify for building libraries
   CFLAGS=${CFLAGS/-Wp,-D_FORTIFY_SOURCE=2/}
+  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}
 
   "$srcdir/glibc/configure" \
       --libdir=/usr/lib \
       --libexecdir=/usr/lib \
       "${_configure_flags[@]}"
 
-  # build libraries with fortify disabled
-  echo "build-programs=no" >> configparms
-  make -O
-
-  # re-enable fortify for programs
-  sed -i "/build-programs=/s#no#yes#" configparms
-  echo "CFLAGS += -Wp,-D_FORTIFY_SOURCE=2" >> configparms
-  make -O
-
-  # build info pages manually for reproducibility
-  make info
-
-  cd "$srcdir/lib32-glibc-build"
-  export CC="gcc -m32 -mstackrealign"
-  export CXX="g++ -m32 -mstackrealign"
-
-  echo "slibdir=/usr/lib32" >> configparms
-  echo "rtlddir=/usr/lib32" >> configparms
-  echo "sbindir=/usr/bin" >> configparms
-  echo "rootsbindir=/usr/bin" >> configparms
-
-  "$srcdir/glibc/configure" \
-      --host=i686-pc-linux-gnu \
-      --libdir=/usr/lib32 \
-      --libexecdir=/usr/lib32 \
-      "${_configure_flags[@]}"
-
-  # build libraries with fortify disabled
-  echo "build-programs=no" >> configparms
-  make -O
-
-  # re-enable fortify for programs
-  sed -i "/build-programs=/s#no#yes#" configparms
-  echo "CFLAGS += -Wp,-D_FORTIFY_SOURCE=2" >> configparms
   make -O
 
   # pregenerate C.UTF-8 locale until it is built into glibc
@@ -153,7 +119,7 @@ check() {
   make -O check
 }
 
-package_glibc() {
+package() {
   pkgdesc='GNU C Library'
   depends=('linux-api-headers>=4.10' tzdata filesystem)
   optdepends=('gd: for memusagestat'
@@ -190,33 +156,4 @@ package_glibc() {
   install -dm755 "$pkgdir/usr/lib/locale"
   cp -r "$srcdir/C.UTF-8" -t "$pkgdir/usr/lib/locale"
   sed -i '/#C\.UTF-8 /d' "$pkgdir/etc/locale.gen"
-
-  # Provide tracing probes to libstdc++ for exceptions, possibly for other
-  # libraries too. Useful for gdb's catch command.
-  install -Dm644 "$srcdir/sdt.h" "$pkgdir/usr/include/sys/sdt.h"
-  install -Dm644 "$srcdir/sdt-config.h" "$pkgdir/usr/include/sys/sdt-config.h"
-}
-
-package_lib32-glibc() {
-  pkgdesc='GNU C Library (32-bit)'
-  depends=("glibc=$pkgver")
-  options+=('!emptydirs')
-
-  cd lib32-glibc-build
-
-  make install_root="$pkgdir" install
-  rm -rf "$pkgdir"/{etc,sbin,usr/{bin,sbin,share},var}
-
-  # We need to keep 32 bit specific header files
-  find "$pkgdir/usr/include" -type f -not -name '*-32.h' -delete
-
-  # Dynamic linker
-  install -d "$pkgdir/usr/lib"
-  ln -s ../lib32/ld-linux.so.2 "$pkgdir/usr/lib/"
-
-  # Add lib32 paths to the default library search path
-  install -Dm644 "$srcdir/lib32-glibc.conf" "$pkgdir/etc/ld.so.conf.d/lib32-glibc.conf"
-
-  # Symlink /usr/lib32/locale to /usr/lib/locale
-  ln -s ../lib/locale "$pkgdir/usr/lib32/locale"
 }
