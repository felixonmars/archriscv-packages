diff --git a/rpy2/rinterface.py b/rpy2/rinterface.py
index cbe24cc2..ac8a7c9e 100644
--- a/rpy2/rinterface.py
+++ b/rpy2/rinterface.py
@@ -662,10 +662,10 @@ class ComplexSexpVector(SexpVector):
     @staticmethod
     def _CAST_IN(x):
         if isinstance(x, complex):
-            res = (x.real, x.imag)
+            res = { "r": x.real, "i": x.imag }
         else:
             try:
-                res = (x.r, x.i)
+                res = { "r": x.r, "i": x.i }
             except AttributeError:
                 raise TypeError(
                     'Unable to turn value into an R complex number.'
@@ -1228,7 +1228,7 @@ def _post_initr_setup() -> None:
     na_values.NA_Complex = sexp.NAComplexType(
         _rinterface.ffi.new(
             'Rcomplex *',
-            [openrlib.rlib.R_NaReal, openrlib.rlib.R_NaReal])
+            { "r": openrlib.rlib.R_NaReal, "i": openrlib.rlib.R_NaReal })
     )
     NA_Complex = na_values.NA_Complex
 
diff --git a/rpy2/rinterface_lib/R_API.h b/rpy2/rinterface_lib/R_API.h
index f703bcec..bf08ae5d 100644
--- a/rpy2/rinterface_lib/R_API.h
+++ b/rpy2/rinterface_lib/R_API.h
@@ -31,9 +31,12 @@ const unsigned int FREESXP    = 31;
 const unsigned int FUNSXP     = 99;
 
 /* include/R_exts/Complex.h */
-typedef struct {
+typedef union {
+    struct {
     double r;
     double i;
+    };
+    double _Complex private_data_c;
 } Rcomplex;
 
 /* include/Rinternals.h */
