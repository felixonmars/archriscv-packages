diff --git PKGBUILD PKGBUILD
index 000f5fc..a7f8c50 100644
--- PKGBUILD
+++ PKGBUILD
@@ -3,23 +3,21 @@
 # Contributor: Chih-Hsuan Yen <yan12125@gmail.com>
 
 pkgbase=onnxruntime
-pkgname=("${pkgbase}" "${pkgbase}-opt"  "${pkgbase}-rocm" "${pkgbase}-opt-rocm"
-         "python-${pkgbase}" "python-${pkgbase}-opt"
-         "python-${pkgbase}-rocm" "python-${pkgbase}-opt-rocm")
+pkgname=("${pkgbase}" "${pkgbase}-opt"
+         "python-${pkgbase}" "python-${pkgbase}-opt")
 pkgver=1.19.2
 _pkgdesc='Cross-platform, high performance scoring engine for ML models'
 pkgrel=2
 arch=('x86_64')
 url='https://github.com/microsoft/onnxruntime'
 license=('MIT')
-depends=('abseil-cpp' 'boost' 'nsync' 'onednn' 'intel-oneapi-mkl')
+depends=('abseil-cpp' 'boost' 'nsync' 'onednn')
 # https://github.com/microsoft/onnxruntime/blob/main/onnxruntime/python/tools/transformers/requirements.txt
 _pydepends=('python-onnx' 'python-numpy' 'python-coloredlogs' 'python-psutil'
             'python-py-cpuinfo' 'python-sympy' 'python-scipy' 'python-pillow'
             'python-flatbuffers' 'python-protobuf' 'python-packaging')
 makedepends=('git' 'cmake' 'ninja' 'pybind11' 'nlohmann-json' 'chrono-date' 'cxxopts' 'openmpi'
-             'python-setuptools' 'python-installer' 'python-wheel' 'python-build' 'gcc13'
-             'cuda' 'cudnn' 'nccl' 'rocm-hip-sdk' 'hipify-clang' 'rocm-smi-lib' 'roctracer')
+             'python-setuptools' 'python-installer' 'python-wheel' 'python-build' 'gcc13')
 makedepends+=("${_pydepends[@]}")
 #TODO: Add migraphx for ROCm and tensorrt for CUDA.
 optdepends=('openmpi: Distributed memory parallelization')
@@ -106,7 +104,7 @@ build() {
     -DBUILD_TESTING=OFF
     -Donnxruntime_ENABLE_TRAINING=ON
     -Donnxruntime_ENABLE_LAZY_TENSOR=OFF
-    -Donnxruntime_USE_MPI=ON
+    -Donnxruntime_USE_MPI=OFF
     -Donnxruntime_USE_DNNL=ON
     # Stable release of eigen is too old for onnxruntime.
     -Donnxruntime_USE_PREINSTALLED_EIGEN=OFF
@@ -145,28 +143,30 @@ build() {
   export CXX="$NVCC_CCBIN"
   export CC="${NVCC_CCBIN/g++/gcc}"
 
-  echo "Build onnxruntime with CUDA without optimization"
+  echo "Build onnxruntime without optimization"
   cd "${srcdir}/${pkgbase}-cuda"
-  cmake "${_cmake_cuda_args[@]}"
+  cmake "${_cmake_args[@]}"
   cmake --build build
   cd build
   install -Dm644 ../docs/python/README.rst docs/python/README.rst
   ln -s ../setup.py .
   python -m build --wheel --no-isolation
 
-  echo "Build onnxruntime with CUDA with AVX optimizations"
+  echo "Build onnxruntime with RVV optimizations"
   cd "${srcdir}/${pkgbase}-opt-cuda"
-  echo 'string(APPEND CMAKE_C_FLAGS " -march=haswell")' \
+  echo 'string(APPEND CMAKE_C_FLAGS " -march=rv64gcv")' \
     >> cmake/adjust_global_compile_flags.cmake
-  echo 'string(APPEND CMAKE_CXX_FLAGS " -march=haswell")' \
+  echo 'string(APPEND CMAKE_CXX_FLAGS " -march=rv64gcv")' \
     >> cmake/adjust_global_compile_flags.cmake
-  cmake "${_cmake_cuda_args[@]}"
+  cmake "${_cmake_args[@]}"
   cmake --build build
   cd build
   install -Dm644 ../docs/python/README.rst docs/python/README.rst
   ln -s ../setup.py .
   python -m build --wheel --no-isolation
 
+  return
+
   echo "Build onnxruntime with ROCm without optimization"
   cd "${srcdir}/${pkgbase}-rocm"
   cmake "${_cmake_rocm_args[@]}"
@@ -192,9 +192,6 @@ build() {
 
 package_onnxruntime() {
   pkgdesc="$_pkgdesc"
-  optdepends+=('cuda: nVidia GPU acceleration'
-               'cudnn: nVidia GPU acceleration'
-               'nccl: nVidia GPU acceleration')
 
   cd "${pkgbase}-cuda"
   DESTDIR="${pkgdir}" cmake --install build
@@ -203,10 +200,7 @@ package_onnxruntime() {
 }
 
 package_onnxruntime-opt() {
-  pkgdesc="$_pkgdesc (with AVX2 CPU optimizations)"
-  optdepends+=('cuda: nVidia GPU acceleration'
-               'cudnn: nVidia GPU acceleration'
-               'nccl: nVidia GPU acceleration')
+  pkgdesc="$_pkgdesc (with RVV CPU optimizations)"
   provides=("${pkgbase}=${pkgver}")
   conflicts=("${pkgbase}")
 
@@ -244,9 +238,6 @@ package_onnxruntime-opt-rocm() {
 package_python-onnxruntime() {
   pkgdesc="$_pkgdesc"
   depends+=("${pkgbase}" "${_pydepends[@]}")
-  optdepends+=('cuda: nVidia GPU acceleration'
-               'cudnn: nVidia GPU acceleration'
-               'nccl: nVidia GPU acceleration')
 
   cd "${pkgbase}-cuda/build"
   python -m installer --destdir="${pkgdir}" dist/*.whl
@@ -255,13 +246,10 @@ package_python-onnxruntime() {
 }
 
 package_python-onnxruntime-opt() {
-  pkgdesc="$_pkgdesc (with AVX2 CPU optimizations)"
+  pkgdesc="$_pkgdesc (with RVV CPU optimizations)"
   depends+=("${pkgbase}-opt" "${_pydepends[@]}")
   provides=("python-${pkgbase}=${pkgver}")
   conflicts=("python-${pkgbase}")
-  optdepends+=('cuda: nVidia GPU acceleration'
-               'cudnn: nVidia GPU acceleration'
-               'nccl: nVidia GPU acceleration')
 
   cd "${pkgbase}-opt-cuda/build"
   python -m installer --destdir="${pkgdir}" dist/*.whl
