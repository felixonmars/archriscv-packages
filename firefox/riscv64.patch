--- PKGBUILD
+++ PKGBUILD
@@ -12,8 +12,7 @@ url="https://www.mozilla.org/firefox/"
 depends=(gtk3 libxt mime-types dbus-glib ffmpeg nss ttf-font libpulse)
 makedepends=(unzip zip diffutils yasm mesa imake inetutils xorg-server-xvfb
              autoconf2.13 rust clang llvm jack nodejs cbindgen nasm
-             python-setuptools python-psutil python-zstandard lld dump_syms
-             wasi-compiler-rt wasi-libc wasi-libc++ wasi-libc++abi)
+             python-setuptools python-psutil python-zstandard dump_syms)
 optdepends=('networkmanager: Location detection via available WiFi networks'
             'libnotify: Notification integration'
             'pulseaudio: Audio support'
@@ -24,11 +23,15 @@ options=(!emptydirs !makeflags !strip)
 source=(https://archive.mozilla.org/pub/firefox/releases/$pkgver/source/firefox-$pkgver.source.tar.xz{,.asc}
         0001-Use-remoting-name-for-GDK-application-names.patch
         0002-Bug-1745560-Add-missing-stub-for-wl_proxy_marshal_fl.patch
+        cc-crate-riscv64-clang-support.patch
+        makotokato-riscv64-support-and-zenithal-backported.patch
         $pkgname.desktop identity-icons-brand.svg)
 sha256sums=('c178cbf61979bd39a8daa9a09c6e03089da37baded692ad1f745ecfcaae74d64'
             'SKIP'
             'a7a5ea4680c0a4c6eb5a5f99970008f5ad3e2f29f0d6d050aa651bce8c713718'
             '8a893ae44955c90a0fb4a504134773293054ab57a41ba7931df98c8cf5449549'
+            'd8b37f574262067cd10b0d6971a928b46b7965b7c52d164f3c82c8b482670203'
+            '266756aef173c4ec9280ad4f5cd66f22193c1af5c866a2432ffc4d7c5529fa50'
             '298eae9de76ec53182f38d5c549d0379569916eebf62149f9d7f4a7edef36abf'
             'a9b8b4a0a1f4a7b4af77d5fc70c2686d624038909263c795ecc81e0aec7711e9')
 validpgpkeys=('14F26682D0916CDD81E37B6D61B7B526D98F0353') # Mozilla Software Releases <release@mozilla.com>
@@ -55,6 +58,9 @@ prepare() {
   # Fix build with wayland 1.20
   patch -Np1 -i ../0002-Bug-1745560-Add-missing-stub-for-wl_proxy_marshal_fl.patch
 
+  patch -Np1 -i ../cc-crate-riscv64-clang-support.patch
+  patch -Np1 -i ../makotokato-riscv64-support-and-zenithal-backported.patch
+  
   echo -n "$_google_api_key" >google-api-key
   echo -n "$_mozilla_api_key" >mozilla-api-key
 
@@ -63,14 +69,21 @@ ac_add_options --enable-application=browser
 mk_add_options MOZ_OBJDIR=${PWD@Q}/obj
 
 ac_add_options --prefix=/usr
-ac_add_options --enable-release
+# release mode incurs TEST-UNEXPECTED-FAIL | check_networking
+# refer to config/makefiles/rust.mk#L408
+ac_add_options --disable-release
 ac_add_options --enable-hardening
-ac_add_options --enable-optimize
 ac_add_options --enable-rust-simd
-ac_add_options --enable-linker=lld
-ac_add_options --disable-elf-hack
+# lld is broken
+ac_add_options --enable-linker=bfd
 ac_add_options --disable-bootstrap
-ac_add_options --with-wasi-sysroot=/usr/share/wasi-sysroot
+ac_add_options --disable-jit
+ac_add_options --without-wasm-sandboxed-libraries
+
+ac_add_options --enable-optimize
+ac_add_options --disable-debug
+# rustc with opt-level 2 would segfault when compiling neqo-transport
+export RUSTC_OPT_LEVEL=1
 
 # Branding
 ac_add_options --enable-official-branding
@@ -78,7 +91,8 @@ ac_add_options --enable-update-channel=release
 ac_add_options --with-distribution-id=org.archlinux
 ac_add_options --with-unsigned-addon-scopes=app,system
 ac_add_options --allow-addon-sideload
-export MOZILLA_OFFICIAL=1
+# see check_network above
+# export MOZILLA_OFFICIAL=1
 export MOZ_APP_REMOTINGNAME=${pkgname//-/}
 
 # Keys
@@ -93,7 +107,7 @@ ac_add_options --with-system-nss
 # Features
 ac_add_options --enable-alsa
 ac_add_options --enable-jack
-ac_add_options --enable-crashreporter
+# crashreporter not ported to riscv64
 ac_add_options --disable-updater
 ac_add_options --disable-tests
 END
@@ -111,39 +125,41 @@ build() {
   ulimit -n 4096
 
   # Do 3-tier PGO
-  echo "Building instrumented browser..."
-  cat >.mozconfig ../mozconfig - <<END
-ac_add_options --enable-profile-generate=cross
-END
-  ./mach build
-
-  echo "Profiling instrumented browser..."
-  ./mach package
-  LLVM_PROFDATA=llvm-profdata \
-    JARLOG_FILE="$PWD/jarlog" \
-    xvfb-run -s "-screen 0 1920x1080x24 -nolisten local" \
-    ./mach python build/pgo/profileserver.py
-
-  stat -c "Profile data found (%s bytes)" merged.profdata
-  test -s merged.profdata
-
-  stat -c "Jar log found (%s bytes)" jarlog
-  test -s jarlog
-
-  echo "Removing instrumented browser..."
-  ./mach clobber
-
-  echo "Building optimized browser..."
-  cat >.mozconfig ../mozconfig - <<END
-ac_add_options --enable-lto=cross
-ac_add_options --enable-profile-use=cross
-ac_add_options --with-pgo-profile-path=${PWD@Q}/merged.profdata
-ac_add_options --with-pgo-jarlog=${PWD@Q}/jarlog
-END
+  # disable PGO
+#  echo "Building instrumented browser..."
+   cat >.mozconfig ../mozconfig
+#  cat >.mozconfig ../mozconfig - <<END
+#ac_add_options --enable-profile-generate=cross
+#END
   ./mach build
 
-  echo "Building symbol archive..."
-  ./mach buildsymbols
+#  echo "Profiling instrumented browser..."
+#  ./mach package
+#  LLVM_PROFDATA=llvm-profdata \
+#    JARLOG_FILE="$PWD/jarlog" \
+#    xvfb-run -s "-screen 0 1920x1080x24 -nolisten local" \
+#    ./mach python build/pgo/profileserver.py
+#
+#  stat -c "Profile data found (%s bytes)" merged.profdata
+#  test -s merged.profdata
+#
+#  stat -c "Jar log found (%s bytes)" jarlog
+#  test -s jarlog
+#
+#  echo "Removing instrumented browser..."
+#  ./mach clobber
+#
+#  echo "Building optimized browser..."
+#  cat >.mozconfig ../mozconfig - <<END
+#ac_add_options --enable-lto=cross
+#ac_add_options --enable-profile-use=cross
+#ac_add_options --with-pgo-profile-path=${PWD@Q}/merged.profdata
+#ac_add_options --with-pgo-jarlog=${PWD@Q}/jarlog
+#END
+#  ./mach build
+#
+#  echo "Building symbol archive..."
+#  ./mach buildsymbols
 }
 
 package() {
@@ -211,12 +227,12 @@ END
     ln -srfv "$pkgdir/usr/lib/libnssckbi.so" "$nssckbi"
   fi
 
-  export SOCORRO_SYMBOL_UPLOAD_TOKEN_FILE="$startdir/.crash-stats-api.token"
-  if [[ -f $SOCORRO_SYMBOL_UPLOAD_TOKEN_FILE ]]; then
-    make -C obj uploadsymbols
-  else
-    cp -fvt "$startdir" obj/dist/*crashreporter-symbols-full.tar.zst
-  fi
+  #export SOCORRO_SYMBOL_UPLOAD_TOKEN_FILE="$startdir/.crash-stats-api.token"
+  #if [[ -f $SOCORRO_SYMBOL_UPLOAD_TOKEN_FILE ]]; then
+  #  make -C obj uploadsymbols
+  #else
+  #  cp -fvt "$startdir" obj/dist/*crashreporter-symbols-full.tar.zst
+  #fi
 }
 
 # vim:set sw=2 et:
